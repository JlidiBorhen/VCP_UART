###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       06/May/2016  23:31:38
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\IAR Workspace\STM32F407\VCP_ESP\usb_conf\usbd_desc.c
#    Command line =  
#        "D:\IAR Workspace\STM32F407\VCP_ESP\usb_conf\usbd_desc.c" -D
#        USE_STDPERIPH_DRIVER -D STM32F4XX -D USE_FULL_ASSERT -lCN "D:\IAR
#        Workspace\STM32F407\VCP_ESP\Debug\List" -o "D:\IAR
#        Workspace\STM32F407\VCP_ESP\Debug\Obj" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\"
#        -I "D:\IAR Workspace\STM32F407\VCP_ESP\..\Libraries\CMSIS\Include\" -I
#        "D:\IAR Workspace\STM32F407\VCP_ESP\..\Utilities\STM32F4-Discovery\"
#        -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\..\Libraries\CMSIS\ST\STM32F4xx\Include\"
#        -I "D:\IAR Workspace\STM32F407\VCP_ESP\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_conf\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_lib\cdc\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_lib\otg\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_lib\core\" -On --use_c++_inline -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        D:\IAR Workspace\STM32F407\VCP_ESP\Debug\List\usbd_desc.lst
#    Object file  =  D:\IAR Workspace\STM32F407\VCP_ESP\Debug\Obj\usbd_desc.o
#
###############################################################################

D:\IAR Workspace\STM32F407\VCP_ESP\usb_conf\usbd_desc.c
      1          /**
      2            ******************************************************************************
      3            * @file    usbd_desc.c
      4            * @author  MCD Application Team
      5            * @version V1.0.0
      6            * @date    19-September-2011
      7            * @brief   This file provides the USBD descriptors and string formating method.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     19            ******************************************************************************
     20            */ 
     21          
     22          /* Includes ------------------------------------------------------------------*/
     23          #include "usbd_core.h"
     24          #include "usbd_desc.h"
     25          #include "usbd_req.h"
     26          #include "usbd_conf.h"
     27          #include "usb_regs.h"
     28          
     29          /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
     30            * @{
     31            */
     32          
     33          
     34          /** @defgroup USBD_DESC 
     35            * @brief USBD descriptors module
     36            * @{
     37            */ 
     38          
     39          /** @defgroup USBD_DESC_Private_TypesDefinitions
     40            * @{
     41            */ 
     42          /**
     43            * @}
     44            */ 
     45          
     46          
     47          /** @defgroup USBD_DESC_Private_Defines
     48            * @{
     49            */ 
     50          
     51          #define USBD_VID                        0x0483
     52          
     53          #define USBD_PID                        0x5740
     54          
     55          /** @defgroup USB_String_Descriptors
     56            * @{
     57            */ 
     58          #define USBD_LANGID_STRING              0x409
     59          #define USBD_MANUFACTURER_STRING        "STMicroelectronics"
     60          
     61          #define USBD_PRODUCT_HS_STRING          "STM32 Virtual ComPort in HS mode"
     62          #define USBD_SERIALNUMBER_HS_STRING     "00000000050B"
     63          
     64          #define USBD_PRODUCT_FS_STRING          "STM32 Virtual ComPort in FS Mode"
     65          #define USBD_SERIALNUMBER_FS_STRING     "00000000050C"
     66          
     67          #define USBD_CONFIGURATION_HS_STRING    "VCP Config"
     68          #define USBD_INTERFACE_HS_STRING        "VCP Interface"
     69          
     70          #define USBD_CONFIGURATION_FS_STRING    "VCP Config"
     71          #define USBD_INTERFACE_FS_STRING        "VCP Interface"
     72          /**
     73            * @}
     74            */ 
     75          
     76          
     77          /** @defgroup USBD_DESC_Private_Macros
     78            * @{
     79            */ 
     80          /**
     81            * @}
     82            */ 
     83          
     84          
     85          /** @defgroup USBD_DESC_Private_Variables
     86            * @{
     87            */ 
     88          

   \                                 In section .data, align 4
     89          USBD_DEVICE USR_desc =
   \                     USR_desc:
   \   00000000   0x........         DC32 USBD_USR_DeviceDescriptor, USBD_USR_LangIDStrDescriptor
   \              0x........   
   \   00000008   0x........         DC32 USBD_USR_ManufacturerStrDescriptor, USBD_USR_ProductStrDescriptor
   \              0x........   
   \   00000010   0x........         DC32 USBD_USR_SerialStrDescriptor, USBD_USR_ConfigStrDescriptor
   \              0x........   
   \   00000018   0x........         DC32 USBD_USR_InterfaceStrDescriptor
     90          {
     91            USBD_USR_DeviceDescriptor,
     92            USBD_USR_LangIDStrDescriptor, 
     93            USBD_USR_ManufacturerStrDescriptor,
     94            USBD_USR_ProductStrDescriptor,
     95            USBD_USR_SerialStrDescriptor,
     96            USBD_USR_ConfigStrDescriptor,
     97            USBD_USR_InterfaceStrDescriptor,
     98            
     99          };
    100          
    101          #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
    102            #if defined ( __ICCARM__ ) /*!< IAR Compiler */
    103              #pragma data_alignment=4   
    104            #endif
    105          #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
    106          /* USB Standard Device Descriptor */

   \                                 In section .data, align 4
    107          __ALIGN_BEGIN uint8_t USBD_DeviceDesc[USB_SIZ_DEVICE_DESC] __ALIGN_END =
   \                     USBD_DeviceDesc:
   \   00000000   0x12 0x01          DC8 18, 1, 0, 2, 0, 0, 0, 64, 131, 4, 64, 87, 0, 2, 1, 2, 3, 1, 0, 0
   \              0x00 0x02    
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x83 0x04    
   \              0x40 0x57    
   \              0x00 0x02    
   \              0x01 0x02    
   \              0x03 0x01    
   \              0x00 0x00    
    108            {
    109              0x12,                       /*bLength */
    110              USB_DEVICE_DESCRIPTOR_TYPE, /*bDescriptorType*/
    111              0x00,                       /*bcdUSB */
    112              0x02,
    113              0x00,                       /*bDeviceClass*/
    114              0x00,                       /*bDeviceSubClass*/
    115              0x00,                       /*bDeviceProtocol*/
    116              USB_OTG_MAX_EP0_SIZE,      /*bMaxPacketSize*/
    117              LOBYTE(USBD_VID),           /*idVendor*/
    118              HIBYTE(USBD_VID),           /*idVendor*/
    119              LOBYTE(USBD_PID),           /*idVendor*/
    120              HIBYTE(USBD_PID),           /*idVendor*/
    121              0x00,                       /*bcdDevice rel. 2.00*/
    122              0x02,
    123              USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
    124              USBD_IDX_PRODUCT_STR,       /*Index of product string*/
    125              USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
    126              USBD_CFG_MAX_NUM            /*bNumConfigurations*/
    127            } ; /* USB_DeviceDescriptor */
    128          
    129          #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
    130            #if defined ( __ICCARM__ ) /*!< IAR Compiler */
    131              #pragma data_alignment=4   
    132            #endif
    133          #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
    134          /* USB Standard Device Descriptor */

   \                                 In section .data, align 4
    135          __ALIGN_BEGIN uint8_t USBD_DeviceQualifierDesc[USB_LEN_DEV_QUALIFIER_DESC] __ALIGN_END =
   \                     USBD_DeviceQualifierDesc:
   \   00000000   0x0A 0x06          DC8 10, 6, 0, 2, 0, 0, 0, 64, 1, 0, 0, 0
   \              0x00 0x02    
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x01 0x00    
   \              0x00 0x00    
    136          {
    137            USB_LEN_DEV_QUALIFIER_DESC,
    138            USB_DESC_TYPE_DEVICE_QUALIFIER,
    139            0x00,
    140            0x02,
    141            0x00,
    142            0x00,
    143            0x00,
    144            0x40,
    145            0x01,
    146            0x00,
    147          };
    148          
    149          #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
    150            #if defined ( __ICCARM__ ) /*!< IAR Compiler */
    151              #pragma data_alignment=4   
    152            #endif
    153          #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
    154          /* USB Standard Device Descriptor */

   \                                 In section .data, align 4
    155          __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_SIZ_STRING_LANGID] __ALIGN_END =
   \                     USBD_LangIDDesc:
   \   00000000   0x04 0x03          DC8 4, 3, 9, 4
   \              0x09 0x04    
    156          {
    157               USB_SIZ_STRING_LANGID,         
    158               USB_DESC_TYPE_STRING,       
    159               LOBYTE(USBD_LANGID_STRING),
    160               HIBYTE(USBD_LANGID_STRING), 
    161          };
    162          /**
    163            * @}
    164            */ 
    165          
    166          
    167          /** @defgroup USBD_DESC_Private_FunctionPrototypes
    168            * @{
    169            */ 
    170          /**
    171            * @}
    172            */ 
    173          
    174          
    175          /** @defgroup USBD_DESC_Private_Functions
    176            * @{
    177            */ 
    178          
    179          /**
    180          * @brief  USBD_USR_DeviceDescriptor 
    181          *         return the device descriptor
    182          * @param  speed : current device speed
    183          * @param  length : pointer to data length variable
    184          * @retval pointer to descriptor buffer
    185          */

   \                                 In section .text, align 2, keep-with-next
    186          uint8_t *  USBD_USR_DeviceDescriptor( uint8_t speed , uint16_t *length)
    187          {
   \                     USBD_USR_DeviceDescriptor: (+1)
   \   00000000   0x0002             MOVS     R2,R0
    188            *length = sizeof(USBD_DeviceDesc);
   \   00000002   0x2012             MOVS     R0,#+18
   \   00000004   0x8008             STRH     R0,[R1, #+0]
    189            return USBD_DeviceDesc;
   \   00000006   0x....             LDR.N    R0,??DataTable6
   \   00000008   0x4770             BX       LR               ;; return
    190          }
    191          
    192          /**
    193          * @brief  USBD_USR_LangIDStrDescriptor 
    194          *         return the LangID string descriptor
    195          * @param  speed : current device speed
    196          * @param  length : pointer to data length variable
    197          * @retval pointer to descriptor buffer
    198          */

   \                                 In section .text, align 2, keep-with-next
    199          uint8_t *  USBD_USR_LangIDStrDescriptor( uint8_t speed , uint16_t *length)
    200          {
   \                     USBD_USR_LangIDStrDescriptor: (+1)
   \   00000000   0x0002             MOVS     R2,R0
    201            *length =  sizeof(USBD_LangIDDesc);  
   \   00000002   0x2004             MOVS     R0,#+4
   \   00000004   0x8008             STRH     R0,[R1, #+0]
    202            return USBD_LangIDDesc;
   \   00000006   0x....             LDR.N    R0,??DataTable6_1
   \   00000008   0x4770             BX       LR               ;; return
    203          }
    204          
    205          
    206          /**
    207          * @brief  USBD_USR_ProductStrDescriptor 
    208          *         return the product string descriptor
    209          * @param  speed : current device speed
    210          * @param  length : pointer to data length variable
    211          * @retval pointer to descriptor buffer
    212          */

   \                                 In section .text, align 2, keep-with-next
    213          uint8_t *  USBD_USR_ProductStrDescriptor( uint8_t speed , uint16_t *length)
    214          {
   \                     USBD_USR_ProductStrDescriptor: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    215           
    216            
    217            if(speed == 0)
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD105             BNE.N    ??USBD_USR_ProductStrDescriptor_0
    218            {   
    219              USBD_GetString ((uint8_t*)USBD_PRODUCT_HS_STRING, USBD_StrDesc, length);
   \   0000000C   0x002A             MOVS     R2,R5
   \   0000000E   0x....             LDR.N    R1,??DataTable6_2
   \   00000010   0x....             LDR.N    R0,??DataTable6_3
   \   00000012   0x.... 0x....      BL       USBD_GetString
   \   00000016   0xE004             B.N      ??USBD_USR_ProductStrDescriptor_1
    220            }
    221            else
    222            {
    223              USBD_GetString ((uint8_t*)USBD_PRODUCT_FS_STRING, USBD_StrDesc, length);
   \                     ??USBD_USR_ProductStrDescriptor_0: (+1)
   \   00000018   0x002A             MOVS     R2,R5
   \   0000001A   0x....             LDR.N    R1,??DataTable6_2
   \   0000001C   0x....             LDR.N    R0,??DataTable6_4
   \   0000001E   0x.... 0x....      BL       USBD_GetString
    224            }
    225            return USBD_StrDesc;
   \                     ??USBD_USR_ProductStrDescriptor_1: (+1)
   \   00000022   0x....             LDR.N    R0,??DataTable6_2
   \   00000024   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    226          }
    227          
    228          /**
    229          * @brief  USBD_USR_ManufacturerStrDescriptor 
    230          *         return the manufacturer string descriptor
    231          * @param  speed : current device speed
    232          * @param  length : pointer to data length variable
    233          * @retval pointer to descriptor buffer
    234          */

   \                                 In section .text, align 2, keep-with-next
    235          uint8_t *  USBD_USR_ManufacturerStrDescriptor( uint8_t speed , uint16_t *length)
    236          {
   \                     USBD_USR_ManufacturerStrDescriptor: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    237            USBD_GetString ((uint8_t*)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
   \   00000006   0x002A             MOVS     R2,R5
   \   00000008   0x....             LDR.N    R1,??DataTable6_2
   \   0000000A   0x....             LDR.N    R0,??DataTable6_5
   \   0000000C   0x.... 0x....      BL       USBD_GetString
    238            return USBD_StrDesc;
   \   00000010   0x....             LDR.N    R0,??DataTable6_2
   \   00000012   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    239          }
    240          
    241          /**
    242          * @brief  USBD_USR_SerialStrDescriptor 
    243          *         return the serial number string descriptor
    244          * @param  speed : current device speed
    245          * @param  length : pointer to data length variable
    246          * @retval pointer to descriptor buffer
    247          */

   \                                 In section .text, align 2, keep-with-next
    248          uint8_t *  USBD_USR_SerialStrDescriptor( uint8_t speed , uint16_t *length)
    249          {
   \                     USBD_USR_SerialStrDescriptor: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    250            if(speed  == USB_OTG_SPEED_HIGH)
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD105             BNE.N    ??USBD_USR_SerialStrDescriptor_0
    251            {    
    252              USBD_GetString ((uint8_t*)USBD_SERIALNUMBER_HS_STRING, USBD_StrDesc, length);
   \   0000000C   0x002A             MOVS     R2,R5
   \   0000000E   0x....             LDR.N    R1,??DataTable6_2
   \   00000010   0x....             LDR.N    R0,??DataTable6_6
   \   00000012   0x.... 0x....      BL       USBD_GetString
   \   00000016   0xE004             B.N      ??USBD_USR_SerialStrDescriptor_1
    253            }
    254            else
    255            {
    256              USBD_GetString ((uint8_t*)USBD_SERIALNUMBER_FS_STRING, USBD_StrDesc, length);
   \                     ??USBD_USR_SerialStrDescriptor_0: (+1)
   \   00000018   0x002A             MOVS     R2,R5
   \   0000001A   0x....             LDR.N    R1,??DataTable6_2
   \   0000001C   0x....             LDR.N    R0,??DataTable6_7
   \   0000001E   0x.... 0x....      BL       USBD_GetString
    257            }
    258            return USBD_StrDesc;
   \                     ??USBD_USR_SerialStrDescriptor_1: (+1)
   \   00000022   0x....             LDR.N    R0,??DataTable6_2
   \   00000024   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    259          }
    260          
    261          /**
    262          * @brief  USBD_USR_ConfigStrDescriptor 
    263          *         return the configuration string descriptor
    264          * @param  speed : current device speed
    265          * @param  length : pointer to data length variable
    266          * @retval pointer to descriptor buffer
    267          */

   \                                 In section .text, align 2, keep-with-next
    268          uint8_t *  USBD_USR_ConfigStrDescriptor( uint8_t speed , uint16_t *length)
    269          {
   \                     USBD_USR_ConfigStrDescriptor: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    270            if(speed  == USB_OTG_SPEED_HIGH)
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD105             BNE.N    ??USBD_USR_ConfigStrDescriptor_0
    271            {  
    272              USBD_GetString ((uint8_t*)USBD_CONFIGURATION_HS_STRING, USBD_StrDesc, length);
   \   0000000C   0x002A             MOVS     R2,R5
   \   0000000E   0x....             LDR.N    R1,??DataTable6_2
   \   00000010   0x....             LDR.N    R0,??DataTable6_8
   \   00000012   0x.... 0x....      BL       USBD_GetString
   \   00000016   0xE004             B.N      ??USBD_USR_ConfigStrDescriptor_1
    273            }
    274            else
    275            {
    276              USBD_GetString ((uint8_t*)USBD_CONFIGURATION_FS_STRING, USBD_StrDesc, length);
   \                     ??USBD_USR_ConfigStrDescriptor_0: (+1)
   \   00000018   0x002A             MOVS     R2,R5
   \   0000001A   0x....             LDR.N    R1,??DataTable6_2
   \   0000001C   0x....             LDR.N    R0,??DataTable6_8
   \   0000001E   0x.... 0x....      BL       USBD_GetString
    277            }
    278            return USBD_StrDesc;  
   \                     ??USBD_USR_ConfigStrDescriptor_1: (+1)
   \   00000022   0x....             LDR.N    R0,??DataTable6_2
   \   00000024   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    279          }
    280          
    281          
    282          /**
    283          * @brief  USBD_USR_InterfaceStrDescriptor 
    284          *         return the interface string descriptor
    285          * @param  speed : current device speed
    286          * @param  length : pointer to data length variable
    287          * @retval pointer to descriptor buffer
    288          */

   \                                 In section .text, align 2, keep-with-next
    289          uint8_t *  USBD_USR_InterfaceStrDescriptor( uint8_t speed , uint16_t *length)
    290          {
   \                     USBD_USR_InterfaceStrDescriptor: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    291            if(speed == 0)
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD105             BNE.N    ??USBD_USR_InterfaceStrDescriptor_0
    292            {
    293              USBD_GetString ((uint8_t*)USBD_INTERFACE_HS_STRING, USBD_StrDesc, length);
   \   0000000C   0x002A             MOVS     R2,R5
   \   0000000E   0x....             LDR.N    R1,??DataTable6_2
   \   00000010   0x....             LDR.N    R0,??DataTable6_9
   \   00000012   0x.... 0x....      BL       USBD_GetString
   \   00000016   0xE004             B.N      ??USBD_USR_InterfaceStrDescriptor_1
    294            }
    295            else
    296            {
    297              USBD_GetString ((uint8_t*)USBD_INTERFACE_FS_STRING, USBD_StrDesc, length);
   \                     ??USBD_USR_InterfaceStrDescriptor_0: (+1)
   \   00000018   0x002A             MOVS     R2,R5
   \   0000001A   0x....             LDR.N    R1,??DataTable6_2
   \   0000001C   0x....             LDR.N    R0,??DataTable6_9
   \   0000001E   0x.... 0x....      BL       USBD_GetString
    298            }
    299            return USBD_StrDesc;  
   \                     ??USBD_USR_InterfaceStrDescriptor_1: (+1)
   \   00000022   0x....             LDR.N    R0,??DataTable6_2
   \   00000024   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    300          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     USBD_DeviceDesc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     USBD_LangIDDesc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     USBD_StrDesc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x53 0x54          DC8 "STM32 Virtual ComPort in HS mode"
   \              0x4D 0x33    
   \              0x32 0x20    
   \              0x56 0x69    
   \              0x72 0x74    
   \              0x75 0x61    
   \              0x6C 0x20    
   \              0x43 0x6F    
   \              0x6D 0x50    
   \              0x6F 0x72    
   \              0x74 0x20    
   \              0x69 0x6E    
   \              0x20 0x48    
   \              0x53 0x20    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x53 0x54          DC8 "STM32 Virtual ComPort in FS Mode"
   \              0x4D 0x33    
   \              0x32 0x20    
   \              0x56 0x69    
   \              0x72 0x74    
   \              0x75 0x61    
   \              0x6C 0x20    
   \              0x43 0x6F    
   \              0x6D 0x50    
   \              0x6F 0x72    
   \              0x74 0x20    
   \              0x69 0x6E    
   \              0x20 0x46    
   \              0x53 0x20    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x53 0x54          DC8 "STMicroelectronics"
   \              0x4D 0x69    
   \              0x63 0x72    
   \              0x6F 0x65    
   \              0x6C 0x65    
   \              0x63 0x74    
   \              0x72 0x6F    
   \              0x6E 0x69    
   \              0x63 0x73    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x30 0x30          DC8 "00000000050B"
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x35    
   \              0x30 0x42    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x30 0x30          DC8 "00000000050C"
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x35    
   \              0x30 0x43    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x56 0x43          DC8 "VCP Config"
   \              0x50 0x20    
   \              0x43 0x6F    
   \              0x6E 0x66    
   \              0x69 0x67    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x56 0x43          DC8 "VCP Interface"
   \              0x50 0x20    
   \              0x49 0x6E    
   \              0x74 0x65    
   \              0x72 0x66    
   \              0x61 0x63    
   \              0x65 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0
    301          
    302          /**
    303            * @}
    304            */ 
    305          
    306          
    307          /**
    308            * @}
    309            */ 
    310          
    311          
    312          /**
    313            * @}
    314            */ 
    315          
    316          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/
    317          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   USBD_USR_ConfigStrDescriptor
        16   -> USBD_GetString
       0   USBD_USR_DeviceDescriptor
      16   USBD_USR_InterfaceStrDescriptor
        16   -> USBD_GetString
       0   USBD_USR_LangIDStrDescriptor
      16   USBD_USR_ManufacturerStrDescriptor
        16   -> USBD_GetString
      16   USBD_USR_ProductStrDescriptor
        16   -> USBD_GetString
      16   USBD_USR_SerialStrDescriptor
        16   -> USBD_GetString


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
      36  ?_0
      36  ?_1
      20  ?_2
      16  ?_3
      16  ?_4
      12  ?_5
      16  ?_6
      20  USBD_DeviceDesc
      12  USBD_DeviceQualifierDesc
       4  USBD_LangIDDesc
      38  USBD_USR_ConfigStrDescriptor
      10  USBD_USR_DeviceDescriptor
      38  USBD_USR_InterfaceStrDescriptor
      10  USBD_USR_LangIDStrDescriptor
      20  USBD_USR_ManufacturerStrDescriptor
      38  USBD_USR_ProductStrDescriptor
      38  USBD_USR_SerialStrDescriptor
      28  USR_desc

 
  64 bytes in section .data
 152 bytes in section .rodata
 232 bytes in section .text
 
 232 bytes of CODE  memory
 152 bytes of CONST memory
  64 bytes of DATA  memory

Errors: none
Warnings: 1
