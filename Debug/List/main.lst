###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       11/May/2016  11:13:06
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\IAR Workspace\STM32F407\VCP_ESP\main.c
#    Command line =  
#        "D:\IAR Workspace\STM32F407\VCP_ESP\main.c" -D USE_STDPERIPH_DRIVER -D
#        STM32F4XX -D USE_FULL_ASSERT -lCN "D:\IAR
#        Workspace\STM32F407\VCP_ESP\Debug\List" -o "D:\IAR
#        Workspace\STM32F407\VCP_ESP\Debug\Obj" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\"
#        -I "D:\IAR Workspace\STM32F407\VCP_ESP\..\Libraries\CMSIS\Include\" -I
#        "D:\IAR Workspace\STM32F407\VCP_ESP\..\Utilities\STM32F4-Discovery\"
#        -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\..\Libraries\CMSIS\ST\STM32F4xx\Include\"
#        -I "D:\IAR Workspace\STM32F407\VCP_ESP\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_conf\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_lib\cdc\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_lib\otg\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_lib\core\" -On --use_c++_inline -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  D:\IAR Workspace\STM32F407\VCP_ESP\Debug\List\main.lst
#    Object file  =  D:\IAR Workspace\STM32F407\VCP_ESP\Debug\Obj\main.o
#
###############################################################################

D:\IAR Workspace\STM32F407\VCP_ESP\main.c
      1          #define HSE_VALUE ((uint32_t)8000000) 
      2          #define BT_BAUD 38400
      3          #include "stm32f4xx_conf.h"
      4          #include "stm32f4xx.h"
      5          #include "stm32f4xx_gpio.h"
      6          #include "stm32f4xx_rcc.h"
      7          #include "stm32f4xx_exti.h"
      8          #include "stm32f4xx_usart.h"
      9          #include "usbd_cdc_core.h"
     10          #include "usbd_usr.h"
     11          #include "usbd_desc.h"
     12          #include "usbd_cdc_vcp.h"
     13          #include "usb_dcd_int.h"
     14          #include "stm32f4xx_syscfg.h"
     15          #include "misc.h"
     16          #include "delay.h"
     17          
     18          void init_USART1(uint32_t);

   \                                 In section .bss, align 4
     19          int i=0;
   \                     i:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     20          uint8_t ch;
   \                     ch:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     21          __ALIGN_BEGIN USB_OTG_CORE_HANDLE  USB_OTG_dev __ALIGN_END;
   \                     USB_OTG_dev:
   \   00000000                      DS8 1520
     22          

   \                                 In section .text, align 2, keep-with-next
     23          int main(void) {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     24          
     25          	SystemInit();
   \   00000002   0x.... 0x....      BL       SystemInit
     26          	SysTick_Init();
   \   00000006   0x.... 0x....      BL       SysTick_Init
     27                  init_USART1(BT_BAUD);
   \   0000000A   0xF44F 0x4016      MOV      R0,#+38400
   \   0000000E   0x.... 0x....      BL       init_USART1
     28          	USBD_Init(&USB_OTG_dev,
     29          	            USB_OTG_FS_CORE_ID,
     30          	            &USR_desc,
     31          	            &USBD_CDC_cb,
     32          	            &USR_cb);
   \   00000012   0x....             LDR.N    R0,??DataTable5
   \   00000014   0x9000             STR      R0,[SP, #+0]
   \   00000016   0x....             LDR.N    R3,??DataTable5_1
   \   00000018   0x....             LDR.N    R2,??DataTable5_2
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x....             LDR.N    R0,??DataTable5_3
   \   0000001E   0x.... 0x....      BL       USBD_Init
     33                
     34          	while (1) {
     35                   if(VCP_get_char(&ch))
   \                     ??main_0: (+1)
   \   00000022   0x....             LDR.N    R0,??DataTable5_4
   \   00000024   0x.... 0x....      BL       VCP_get_char
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD003             BEQ.N    ??main_1
     36                   USART1->DR=ch;
   \   0000002C   0x....             LDR.N    R0,??DataTable5_4
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x....             LDR.N    R1,??DataTable5_5  ;; 0x40011004
   \   00000032   0x8008             STRH     R0,[R1, #+0]
     37                     delay_nms(1);
   \                     ??main_1: (+1)
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0x.... 0x....      BL       delay_nms
   \   0000003A   0xE7F2             B.N      ??main_0
     38          
     39                     
     40          	}
     41          }
     42          

   \                                 In section .text, align 2, keep-with-next
     43          void init_USART1(uint32_t baudrate){
   \                     init_USART1: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB088             SUB      SP,SP,#+32
   \   00000004   0x0004             MOVS     R4,R0
     44          
     45           
     46            GPIO_InitTypeDef GPIO_InitStruct; 
     47            USART_InitTypeDef USART_InitStruct; 
     48            NVIC_InitTypeDef NVIC_InitStructure; 
     49           
     50            RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x2010             MOVS     R0,#+16
   \   0000000A   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
     51          
     52            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x2002             MOVS     R0,#+2
   \   00000012   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     53          
     54            
     55            GPIO_InitStruct.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7; // Pins 6 (TX) and 7 (RX) 
   \   00000016   0x20C0             MOVS     R0,#+192
   \   00000018   0x9001             STR      R0,[SP, #+4]
     56            GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF; 		
   \   0000001A   0x2002             MOVS     R0,#+2
   \   0000001C   0xF88D 0x0008      STRB     R0,[SP, #+8]
     57            GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;	
   \   00000020   0x2002             MOVS     R0,#+2
   \   00000022   0xF88D 0x0009      STRB     R0,[SP, #+9]
     58            GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;			
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0xF88D 0x000A      STRB     R0,[SP, #+10]
     59            GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_NOPULL;			
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0xF88D 0x000B      STRB     R0,[SP, #+11]
     60            GPIO_Init(GPIOB, &GPIO_InitStruct);					
   \   00000032   0xA901             ADD      R1,SP,#+4
   \   00000034   0x....             LDR.N    R0,??DataTable5_6  ;; 0x40020400
   \   00000036   0x.... 0x....      BL       GPIO_Init
     61            GPIO_PinAFConfig(GPIOB, GPIO_PinSource6, GPIO_AF_USART1); 
   \   0000003A   0x2207             MOVS     R2,#+7
   \   0000003C   0x2106             MOVS     R1,#+6
   \   0000003E   0x....             LDR.N    R0,??DataTable5_6  ;; 0x40020400
   \   00000040   0x.... 0x....      BL       GPIO_PinAFConfig
     62            GPIO_PinAFConfig(GPIOB, GPIO_PinSource7, GPIO_AF_USART1);
   \   00000044   0x2207             MOVS     R2,#+7
   \   00000046   0x2107             MOVS     R1,#+7
   \   00000048   0x....             LDR.N    R0,??DataTable5_6  ;; 0x40020400
   \   0000004A   0x.... 0x....      BL       GPIO_PinAFConfig
     63          
     64            USART_InitStruct.USART_BaudRate = baudrate;				
   \   0000004E   0x9403             STR      R4,[SP, #+12]
     65            USART_InitStruct.USART_WordLength = USART_WordLength_8b;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0xF8AD 0x0010      STRH     R0,[SP, #+16]
     66            USART_InitStruct.USART_StopBits = USART_StopBits_1;		
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0xF8AD 0x0012      STRH     R0,[SP, #+18]
     67            USART_InitStruct.USART_Parity = USART_Parity_No;		
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0xF8AD 0x0014      STRH     R0,[SP, #+20]
     68            USART_InitStruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0xF8AD 0x0018      STRH     R0,[SP, #+24]
     69            USART_InitStruct.USART_Mode = USART_Mode_Tx | USART_Mode_Rx; 
   \   00000068   0x200C             MOVS     R0,#+12
   \   0000006A   0xF8AD 0x0016      STRH     R0,[SP, #+22]
     70            USART_Init(USART1, &USART_InitStruct);					
   \   0000006E   0xA903             ADD      R1,SP,#+12
   \   00000070   0x....             LDR.N    R0,??DataTable5_7  ;; 0x40011000
   \   00000072   0x.... 0x....      BL       USART_Init
     71          
     72            USART_ITConfig(USART1, USART_IT_RXNE, ENABLE); 
   \   00000076   0x2201             MOVS     R2,#+1
   \   00000078   0xF240 0x5125      MOVW     R1,#+1317
   \   0000007C   0x....             LDR.N    R0,??DataTable5_7  ;; 0x40011000
   \   0000007E   0x.... 0x....      BL       USART_ITConfig
     73          
     74            NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;		
   \   00000082   0x2025             MOVS     R0,#+37
   \   00000084   0xF88D 0x0000      STRB     R0,[SP, #+0]
     75            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0xF88D 0x0001      STRB     R0,[SP, #+1]
     76            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;		
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0xF88D 0x0002      STRB     R0,[SP, #+2]
     77            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			
   \   00000094   0x2001             MOVS     R0,#+1
   \   00000096   0xF88D 0x0003      STRB     R0,[SP, #+3]
     78            NVIC_Init(&NVIC_InitStructure);							
   \   0000009A   0x4668             MOV      R0,SP
   \   0000009C   0x.... 0x....      BL       NVIC_Init
     79            USART_Cmd(USART1, ENABLE);
   \   000000A0   0x2101             MOVS     R1,#+1
   \   000000A2   0x....             LDR.N    R0,??DataTable5_7  ;; 0x40011000
   \   000000A4   0x.... 0x....      BL       USART_Cmd
     80          }
   \   000000A8   0xB008             ADD      SP,SP,#+32
   \   000000AA   0xBD10             POP      {R4,PC}          ;; return
     81            
     82          

   \                                 In section .text, align 2, keep-with-next
     83          void assert_failed(u8* file, u32 line)
     84          { 
   \                     assert_failed: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     85            printf( "\r\nassert_failed(). file: %s, line: %ld\r\n", file, line );
   \   00000006   0x002A             MOVS     R2,R5
   \   00000008   0x0021             MOVS     R1,R4
   \   0000000A   0x....             LDR.N    R0,??DataTable5_8
   \   0000000C   0x.... 0x....      BL       printf
     86            while (1)
   \                     ??assert_failed_0: (+1)
   \   00000010   0xE7FE             B.N      ??assert_failed_0
     87            {}
     88          }

   \                                 In section .text, align 2, keep-with-next
     89          void SysTick_Handler(void) {
   \                     SysTick_Handler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     90              TimeTick_Decrement();
   \   00000002   0x.... 0x....      BL       TimeTick_Decrement
     91          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
     92          

   \                                 In section .text, align 2, keep-with-next
     93          void OTG_FS_IRQHandler(void)
     94          {
   \                     OTG_FS_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     95            USBD_OTG_ISR_Handler (&USB_OTG_dev);
   \   00000002   0x....             LDR.N    R0,??DataTable5_3
   \   00000004   0x.... 0x....      BL       USBD_OTG_ISR_Handler
     96          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
     97          

   \                                 In section .text, align 2, keep-with-next
     98          void OTG_FS_WKUP_IRQHandler(void)
     99          {
   \                     OTG_FS_WKUP_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    100            if(USB_OTG_dev.cfg.low_power)
   \   00000002   0x....             LDR.N    R0,??DataTable5_3
   \   00000004   0x7A80             LDRB     R0,[R0, #+10]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD00A             BEQ.N    ??OTG_FS_WKUP_IRQHandler_0
    101            {
    102              *(uint32_t *)(0xE000ED10) &= 0xFFFFFFF9 ;
   \   0000000A   0x....             LDR.N    R0,??DataTable5_9  ;; 0xe000ed10
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF030 0x0006      BICS     R0,R0,#0x6
   \   00000012   0x....             LDR.N    R1,??DataTable5_9  ;; 0xe000ed10
   \   00000014   0x6008             STR      R0,[R1, #+0]
    103              SystemInit();
   \   00000016   0x.... 0x....      BL       SystemInit
    104              USB_OTG_UngateClock(&USB_OTG_dev);
   \   0000001A   0x....             LDR.N    R0,??DataTable5_3
   \   0000001C   0x.... 0x....      BL       USB_OTG_UngateClock
    105            }
    106            EXTI_ClearITPendingBit(EXTI_Line18);
   \                     ??OTG_FS_WKUP_IRQHandler_0: (+1)
   \   00000020   0xF45F 0x2080      MOVS     R0,#+262144
   \   00000024   0x.... 0x....      BL       EXTI_ClearITPendingBit
    107          }
   \   00000028   0xBD01             POP      {R0,PC}          ;; return
    108          

   \                                 In section .text, align 2, keep-with-next
    109          void USART1_IRQHandler(void){
   \                     USART1_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    110          
    111          
    112            if( USART_GetITStatus(USART1, USART_IT_RXNE) ){
   \   00000002   0xF240 0x5125      MOVW     R1,#+1317
   \   00000006   0x....             LDR.N    R0,??DataTable5_7  ;; 0x40011000
   \   00000008   0x.... 0x....      BL       USART_GetITStatus
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD009             BEQ.N    ??USART1_IRQHandler_0
    113                USART_ClearITPendingBit(USART1,USART_IT_RXNE);
   \   00000010   0xF240 0x5125      MOVW     R1,#+1317
   \   00000014   0x....             LDR.N    R0,??DataTable5_7  ;; 0x40011000
   \   00000016   0x.... 0x....      BL       USART_ClearITPendingBit
    114              VCP_put_char(USART1->DR); 
   \   0000001A   0x....             LDR.N    R0,??DataTable5_5  ;; 0x40011004
   \   0000001C   0x8800             LDRH     R0,[R0, #+0]
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x.... 0x....      BL       VCP_put_char
    115            }
    116          }
   \                     ??USART1_IRQHandler_0: (+1)
   \   00000024   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     USR_cb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     USBD_CDC_cb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     USR_desc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     USB_OTG_dev

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     ch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x40011004         DC32     0x40011004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x40020400         DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x40011000         DC32     0x40011000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0xE000ED10         DC32     0xe000ed10

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x0D 0x0A          DC8 "\015\012assert_failed(). file: %s, line: %ld\015\012"
   \              0x61 0x73    
   \              0x73 0x65    
   \              0x72 0x74    
   \              0x5F 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x28    
   \              0x29 0x2E    
   \              0x20 0x66    
   \              0x69 0x6C    
   \              0x65 0x3A    
   \              0x20 0x25    
   \              0x73 0x2C    
   \              0x20 0x6C    
   \              0x69 0x6E    
   \              0x65 0x3A    
   \              0x20 0x25    
   \              0x6C 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   OTG_FS_IRQHandler
         8   -> USBD_OTG_ISR_Handler
       8   OTG_FS_WKUP_IRQHandler
         8   -> EXTI_ClearITPendingBit
         8   -> SystemInit
         8   -> USB_OTG_UngateClock
       8   SysTick_Handler
         8   -> TimeTick_Decrement
       8   USART1_IRQHandler
         8   -> USART_ClearITPendingBit
         8   -> USART_GetITStatus
         8   -> VCP_put_char
      16   assert_failed
        16   -> printf
      40   init_USART1
        40   -> GPIO_Init
        40   -> GPIO_PinAFConfig
        40   -> NVIC_Init
        40   -> RCC_AHB1PeriphClockCmd
        40   -> RCC_APB2PeriphClockCmd
        40   -> USART_Cmd
        40   -> USART_ITConfig
        40   -> USART_Init
       8   main
         8   -> SysTick_Init
         8   -> SystemInit
         8   -> USBD_Init
         8   -> VCP_get_char
         8   -> delay_nms
         8   -> init_USART1


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
      44  ?_0
      10  OTG_FS_IRQHandler
      42  OTG_FS_WKUP_IRQHandler
       8  SysTick_Handler
      38  USART1_IRQHandler
    1520  USB_OTG_dev
      18  assert_failed
       1  ch
       4  i
     172  init_USART1
      60  main

 
 1 525 bytes in section .bss
    44 bytes in section .rodata
   388 bytes in section .text
 
   388 bytes of CODE  memory
    44 bytes of CONST memory
 1 525 bytes of DATA  memory

Errors: none
Warnings: 2
