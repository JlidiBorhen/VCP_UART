###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       06/May/2016  23:31:37
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\IAR Workspace\STM32F407\VCP_ESP\usb_conf\usb_bsp.c
#    Command line =  
#        "D:\IAR Workspace\STM32F407\VCP_ESP\usb_conf\usb_bsp.c" -D
#        USE_STDPERIPH_DRIVER -D STM32F4XX -D USE_FULL_ASSERT -lCN "D:\IAR
#        Workspace\STM32F407\VCP_ESP\Debug\List" -o "D:\IAR
#        Workspace\STM32F407\VCP_ESP\Debug\Obj" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\"
#        -I "D:\IAR Workspace\STM32F407\VCP_ESP\..\Libraries\CMSIS\Include\" -I
#        "D:\IAR Workspace\STM32F407\VCP_ESP\..\Utilities\STM32F4-Discovery\"
#        -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\..\Libraries\CMSIS\ST\STM32F4xx\Include\"
#        -I "D:\IAR Workspace\STM32F407\VCP_ESP\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_conf\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_lib\cdc\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_lib\otg\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_lib\core\" -On --use_c++_inline -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  D:\IAR Workspace\STM32F407\VCP_ESP\Debug\List\usb_bsp.lst
#    Object file  =  D:\IAR Workspace\STM32F407\VCP_ESP\Debug\Obj\usb_bsp.o
#
###############################################################################

D:\IAR Workspace\STM32F407\VCP_ESP\usb_conf\usb_bsp.c
      1          /**
      2            ******************************************************************************
      3            * @file    usb_bsp.c
      4            * @author  MCD Application Team
      5            * @version V1.0.0
      6            * @date    19-September-2011
      7            * @brief   This file is responsible to offer board support package and is
      8            *          configurable by user.
      9            ******************************************************************************
     10            * @attention
     11            *
     12            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     13            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     14            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     15            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     16            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     17            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     18            *
     19            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     20            ******************************************************************************
     21            */
     22          
     23          /* Includes ------------------------------------------------------------------*/
     24          #include "usb_bsp.h"
     25          #include "usbd_conf.h"
     26          #include "stm32f4xx_conf.h"
     27          #include "stm32f4xx_gpio.h"
     28          #include "stm32f4xx_exti.h"
     29          #include "stm32f4xx_rcc.h"
     30          #include "misc.h"
     31          
     32          

   \                                 In section .text, align 2, keep-with-next
     33          void USB_OTG_BSP_ConfigVBUS(USB_OTG_CORE_HANDLE *pdev) {
     34          
     35          }
   \                     USB_OTG_BSP_ConfigVBUS: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     36          

   \                                 In section .text, align 2, keep-with-next
     37          void USB_OTG_BSP_DriveVBUS(USB_OTG_CORE_HANDLE *pdev,uint8_t state) {
     38          
     39          }
   \                     USB_OTG_BSP_DriveVBUS: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     40          
     41          
     42          /**
     43          * @brief  USB_OTG_BSP_Init
     44          *         Initilizes BSP configurations
     45          * @param  None
     46          * @retval None
     47          */
     48          

   \                                 In section .text, align 2, keep-with-next
     49          void USB_OTG_BSP_Init(USB_OTG_CORE_HANDLE *pdev)
     50          {
   \                     USB_OTG_BSP_Init: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     51            GPIO_InitTypeDef GPIO_InitStructure;
     52          
     53          #ifndef USE_ULPI_PHY
     54          #ifdef USB_OTG_FS_LOW_PWR_MGMT_SUPPORT
     55            EXTI_InitTypeDef EXTI_InitStructure;
     56            NVIC_InitTypeDef NVIC_InitStructure;
     57          #endif
     58          #endif
     59          
     60          
     61           #ifdef USE_USB_OTG_FS
     62          
     63            RCC_AHB1PeriphClockCmd( RCC_AHB1Periph_GPIOA , ENABLE);
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     64          
     65            /* Configure SOF VBUS ID DM DP Pins */
     66            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8  |
     67              GPIO_Pin_9  |
     68                GPIO_Pin_11 |
     69                  GPIO_Pin_12;
   \   0000000C   0xF44F 0x50D8      MOV      R0,#+6912
   \   00000010   0x9000             STR      R0,[SP, #+0]
     70          
     71            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
   \   00000012   0x2003             MOVS     R0,#+3
   \   00000014   0xF88D 0x0005      STRB     R0,[SP, #+5]
     72            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
   \   00000018   0x2002             MOVS     R0,#+2
   \   0000001A   0xF88D 0x0004      STRB     R0,[SP, #+4]
     73            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0xF88D 0x0006      STRB     R0,[SP, #+6]
     74            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0xF88D 0x0007      STRB     R0,[SP, #+7]
     75            GPIO_Init(GPIOA, &GPIO_InitStructure);
   \   0000002A   0x4669             MOV      R1,SP
   \   0000002C   0x....             LDR.N    R0,??DataTable0  ;; 0x40020000
   \   0000002E   0x.... 0x....      BL       GPIO_Init
     76          
     77            GPIO_PinAFConfig(GPIOA,GPIO_PinSource8,GPIO_AF_OTG1_FS) ;
   \   00000032   0x220A             MOVS     R2,#+10
   \   00000034   0x2108             MOVS     R1,#+8
   \   00000036   0x....             LDR.N    R0,??DataTable0  ;; 0x40020000
   \   00000038   0x.... 0x....      BL       GPIO_PinAFConfig
     78            GPIO_PinAFConfig(GPIOA,GPIO_PinSource9,GPIO_AF_OTG1_FS) ;
   \   0000003C   0x220A             MOVS     R2,#+10
   \   0000003E   0x2109             MOVS     R1,#+9
   \   00000040   0x....             LDR.N    R0,??DataTable0  ;; 0x40020000
   \   00000042   0x.... 0x....      BL       GPIO_PinAFConfig
     79            GPIO_PinAFConfig(GPIOA,GPIO_PinSource11,GPIO_AF_OTG1_FS) ;
   \   00000046   0x220A             MOVS     R2,#+10
   \   00000048   0x210B             MOVS     R1,#+11
   \   0000004A   0x....             LDR.N    R0,??DataTable0  ;; 0x40020000
   \   0000004C   0x.... 0x....      BL       GPIO_PinAFConfig
     80            GPIO_PinAFConfig(GPIOA,GPIO_PinSource12,GPIO_AF_OTG1_FS) ;
   \   00000050   0x220A             MOVS     R2,#+10
   \   00000052   0x210C             MOVS     R1,#+12
   \   00000054   0x....             LDR.N    R0,??DataTable0  ;; 0x40020000
   \   00000056   0x.... 0x....      BL       GPIO_PinAFConfig
     81          
     82            /* this for ID line debug */
     83          
     84          
     85            GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_10;
   \   0000005A   0xF44F 0x6080      MOV      R0,#+1024
   \   0000005E   0x9000             STR      R0,[SP, #+0]
     86            GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0xF88D 0x0006      STRB     R0,[SP, #+6]
     87            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP ;
   \   00000066   0x2001             MOVS     R0,#+1
   \   00000068   0xF88D 0x0007      STRB     R0,[SP, #+7]
     88            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
   \   0000006C   0x2003             MOVS     R0,#+3
   \   0000006E   0xF88D 0x0005      STRB     R0,[SP, #+5]
     89            GPIO_Init(GPIOA, &GPIO_InitStructure);
   \   00000072   0x4669             MOV      R1,SP
   \   00000074   0x....             LDR.N    R0,??DataTable0  ;; 0x40020000
   \   00000076   0x.... 0x....      BL       GPIO_Init
     90            GPIO_PinAFConfig(GPIOA,GPIO_PinSource10,GPIO_AF_OTG1_FS) ;
   \   0000007A   0x220A             MOVS     R2,#+10
   \   0000007C   0x210A             MOVS     R1,#+10
   \   0000007E   0x....             LDR.N    R0,??DataTable0  ;; 0x40020000
   \   00000080   0x.... 0x....      BL       GPIO_PinAFConfig
     91          
     92            RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
   \   00000084   0x2101             MOVS     R1,#+1
   \   00000086   0xF44F 0x4080      MOV      R0,#+16384
   \   0000008A   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
     93            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_OTG_FS, ENABLE) ;
   \   0000008E   0x2101             MOVS     R1,#+1
   \   00000090   0x2080             MOVS     R0,#+128
   \   00000092   0x.... 0x....      BL       RCC_AHB2PeriphClockCmd
     94           #else // USE_USB_OTG_HS
     95          
     96            #ifdef USE_ULPI_PHY // ULPI
     97            RCC_AHB1PeriphClockCmd( RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_GPIOB |
     98                                   RCC_AHB1Periph_GPIOC | RCC_AHB1Periph_GPIOH |
     99                                     RCC_AHB1Periph_GPIOI, ENABLE);
    100          
    101          
    102            GPIO_PinAFConfig(GPIOA,GPIO_PinSource3, GPIO_AF_OTG2_HS) ; // D0
    103            GPIO_PinAFConfig(GPIOA,GPIO_PinSource5, GPIO_AF_OTG2_HS) ; // CLK
    104            GPIO_PinAFConfig(GPIOB,GPIO_PinSource0, GPIO_AF_OTG2_HS) ; // D1
    105            GPIO_PinAFConfig(GPIOB,GPIO_PinSource1, GPIO_AF_OTG2_HS) ; // D2
    106            GPIO_PinAFConfig(GPIOB,GPIO_PinSource5, GPIO_AF_OTG2_HS) ; // D7
    107            GPIO_PinAFConfig(GPIOB,GPIO_PinSource10,GPIO_AF_OTG2_HS) ; // D3
    108            GPIO_PinAFConfig(GPIOB,GPIO_PinSource11,GPIO_AF_OTG2_HS) ; // D4
    109            GPIO_PinAFConfig(GPIOB,GPIO_PinSource12,GPIO_AF_OTG2_HS) ; // D5
    110            GPIO_PinAFConfig(GPIOB,GPIO_PinSource13,GPIO_AF_OTG2_HS) ; // D6
    111            GPIO_PinAFConfig(GPIOH,GPIO_PinSource4, GPIO_AF_OTG2_HS) ; // NXT
    112            GPIO_PinAFConfig(GPIOI,GPIO_PinSource11,GPIO_AF_OTG2_HS) ; // DIR
    113            GPIO_PinAFConfig(GPIOC,GPIO_PinSource0, GPIO_AF_OTG2_HS) ; // STP
    114          
    115            // CLK
    116            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5 ;
    117            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    118            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    119            GPIO_Init(GPIOA, &GPIO_InitStructure);
    120          
    121            // D0
    122            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3  ;
    123            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    124            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    125            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
    126            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
    127            GPIO_Init(GPIOA, &GPIO_InitStructure);
    128          
    129          
    130          
    131            // D1 D2 D3 D4 D5 D6 D7
    132            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1  |
    133              GPIO_Pin_5 | GPIO_Pin_10 |
    134                GPIO_Pin_11| GPIO_Pin_12 |
    135                  GPIO_Pin_13 ;
    136          
    137            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    138            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    139            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
    140            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
    141            GPIO_Init(GPIOB, &GPIO_InitStructure);
    142          
    143          
    144            // STP
    145            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0  ;
    146            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    147            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    148            GPIO_Init(GPIOC, &GPIO_InitStructure);
    149          
    150            //NXT
    151            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
    152            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    153            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    154            GPIO_Init(GPIOH, &GPIO_InitStructure);
    155          
    156          
    157            //DIR
    158            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11 ;
    159            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    160            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    161            GPIO_Init(GPIOI, &GPIO_InitStructure);
    162          
    163          
    164            RCC_AHB1PeriphClockCmd( RCC_AHB1Periph_OTG_HS |
    165                                   RCC_AHB1Periph_OTG_HS_ULPI, ENABLE) ;
    166          
    167            #else
    168             #ifdef USE_I2C_PHY
    169            RCC_AHB1PeriphClockCmd( RCC_AHB1Periph_GPIOB , ENABLE);
    170            /* Configure RESET INTN SCL SDA (Phy/I2C) Pins */
    171            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 |
    172              GPIO_Pin_1 |
    173                GPIO_Pin_10 |
    174                  GPIO_Pin_11;
    175          
    176            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    177            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    178            GPIO_Init(GPIOB, &GPIO_InitStructure);
    179          
    180            GPIO_PinAFConfig(GPIOB,GPIO_PinSource0,GPIO_AF_OTG2_FS) ;
    181            GPIO_PinAFConfig(GPIOB,GPIO_PinSource1,GPIO_AF_OTG2_FS) ;
    182            GPIO_PinAFConfig(GPIOB,GPIO_PinSource10,GPIO_AF_OTG2_FS) ;
    183            GPIO_PinAFConfig(GPIOB,GPIO_PinSource11,GPIO_AF_OTG2_FS);
    184            RCC_AHB1PeriphClockCmd( RCC_AHB1Periph_OTG_HS, ENABLE) ;
    185          
    186             #else
    187          
    188            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB , ENABLE);
    189          
    190            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12  |
    191              GPIO_Pin_13 |
    192                GPIO_Pin_14 |
    193                  GPIO_Pin_15;
    194          
    195            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    196            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    197            GPIO_Init(GPIOB, &GPIO_InitStructure);
    198          
    199            GPIO_PinAFConfig(GPIOB,GPIO_PinSource12, GPIO_AF_OTG2_FS) ;
    200            GPIO_PinAFConfig(GPIOB,GPIO_PinSource13,GPIO_AF_OTG2_FS) ;
    201            GPIO_PinAFConfig(GPIOB,GPIO_PinSource14,GPIO_AF_OTG2_FS) ;
    202            GPIO_PinAFConfig(GPIOB,GPIO_PinSource15,GPIO_AF_OTG2_FS) ;
    203            RCC_AHB1PeriphClockCmd( RCC_AHB1Periph_OTG_HS, ENABLE) ;
    204             #endif
    205            #endif // USE_ULPI_PHY
    206          
    207           #endif //USB_OTG_HS
    208          
    209          
    210            /* enable the PWR clock */
    211            RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, ENABLE);
   \   00000096   0x2101             MOVS     R1,#+1
   \   00000098   0xF05F 0x5080      MOVS     R0,#+268435456
   \   0000009C   0x.... 0x....      BL       RCC_APB1PeriphResetCmd
    212          
    213            /* Configure the Key button in EXTI mode */
    214            //STM_EVAL_PBInit(BUTTON_USER, BUTTON_MODE_EXTI);
    215          
    216          #ifdef USB_OTG_FS_LOW_PWR_MGMT_SUPPORT
    217            EXTI_ClearITPendingBit(EXTI_Line18);
    218          
    219            EXTI_InitStructure.EXTI_Line = EXTI_Line18;
    220            EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
    221            EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;
    222            EXTI_InitStructure.EXTI_LineCmd = ENABLE;
    223            EXTI_Init(&EXTI_InitStructure);
    224          
    225            EXTI_ClearITPendingBit(EXTI_Line18);
    226          
    227            NVIC_InitStructure.NVIC_IRQChannel = OTG_FS_WKUP_IRQn;
    228            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    229            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    230            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    231            NVIC_Init(&NVIC_InitStructure);
    232          
    233            EXTI_ClearITPendingBit(EXTI_Line18);
    234          #endif
    235          
    236          #ifdef USB_OTG_HS_LOW_PWR_MGMT_SUPPORT
    237            EXTI_ClearITPendingBit(EXTI_Line20);
    238          
    239            EXTI_InitStructure.EXTI_Line = EXTI_Line20;
    240            EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
    241            EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;
    242            EXTI_InitStructure.EXTI_LineCmd = ENABLE;
    243            EXTI_Init(&EXTI_InitStructure);
    244          
    245            EXTI_ClearITPendingBit(EXTI_Line20);
    246          
    247            NVIC_InitStructure.NVIC_IRQChannel = OTG_HS_WKUP_IRQn;
    248            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
    249            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
    250            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    251            NVIC_Init(&NVIC_InitStructure);
    252          
    253            EXTI_ClearITPendingBit(EXTI_Line20);
    254          #endif
    255          
    256            EXTI_ClearITPendingBit(EXTI_Line0);
   \   000000A0   0x2001             MOVS     R0,#+1
   \   000000A2   0x.... 0x....      BL       EXTI_ClearITPendingBit
    257          }
   \   000000A6   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    258          /**
    259          * @brief  USB_OTG_BSP_EnableInterrupt
    260          *         Enabele USB Global interrupt
    261          * @param  None
    262          * @retval None
    263          */

   \                                 In section .text, align 2, keep-with-next
    264          void USB_OTG_BSP_EnableInterrupt(USB_OTG_CORE_HANDLE *pdev)
    265          {
   \                     USB_OTG_BSP_EnableInterrupt: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
    266            NVIC_InitTypeDef NVIC_InitStructure;
    267          
    268            NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
   \   00000006   0xF44F 0x60C0      MOV      R0,#+1536
   \   0000000A   0x.... 0x....      BL       NVIC_PriorityGroupConfig
    269          #ifdef USE_USB_OTG_HS
    270            NVIC_InitStructure.NVIC_IRQChannel = OTG_HS_IRQn;
    271          #else
    272            NVIC_InitStructure.NVIC_IRQChannel = OTG_FS_IRQn;
   \   0000000E   0x2043             MOVS     R0,#+67
   \   00000010   0xF88D 0x0000      STRB     R0,[SP, #+0]
    273          #endif
    274            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xF88D 0x0001      STRB     R0,[SP, #+1]
    275            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;
   \   0000001A   0x2003             MOVS     R0,#+3
   \   0000001C   0xF88D 0x0002      STRB     R0,[SP, #+2]
    276            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0xF88D 0x0003      STRB     R0,[SP, #+3]
    277            NVIC_Init(&NVIC_InitStructure);
   \   00000026   0x4668             MOV      R0,SP
   \   00000028   0x.... 0x....      BL       NVIC_Init
    278          #ifdef USB_OTG_HS_DEDICATED_EP1_ENABLED
    279            NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
    280            NVIC_InitStructure.NVIC_IRQChannel = OTG_HS_EP1_OUT_IRQn;
    281            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
    282            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
    283            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    284            NVIC_Init(&NVIC_InitStructure);
    285          
    286            NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
    287            NVIC_InitStructure.NVIC_IRQChannel = OTG_HS_EP1_IN_IRQn;
    288            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
    289            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
    290            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    291            NVIC_Init(&NVIC_InitStructure);
    292          #endif
    293          }
   \   0000002C   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    294          /**
    295          * @brief  USB_OTG_BSP_uDelay
    296          *         This function provides delay time in micro sec
    297          * @param  usec : Value of delay required in micro sec
    298          * @retval None
    299          */

   \                                 In section .text, align 2, keep-with-next
    300          void USB_OTG_BSP_uDelay (const uint32_t usec)
    301          {
    302            uint32_t count = 0;
   \                     USB_OTG_BSP_uDelay: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
    303            const uint32_t utime = (120 * usec / 7);
   \   00000002   0x2278             MOVS     R2,#+120
   \   00000004   0xFB02 0xF200      MUL      R2,R2,R0
   \   00000008   0x2307             MOVS     R3,#+7
   \   0000000A   0xFBB2 0xF2F3      UDIV     R2,R2,R3
    304            do
    305            {
    306              if ( ++count > utime )
   \                     ??USB_OTG_BSP_uDelay_0: (+1)
   \   0000000E   0x1C49             ADDS     R1,R1,#+1
   \   00000010   0x428A             CMP      R2,R1
   \   00000012   0xD300             BCC.N    ??USB_OTG_BSP_uDelay_1
    307              {
    308                return ;
    309              }
    310            }
    311            while (1);
   \                     ??USB_OTG_BSP_uDelay_2: (+1)
   \   00000014   0xE7FB             B.N      ??USB_OTG_BSP_uDelay_0
   \                     ??USB_OTG_BSP_uDelay_1: (+1)
   \   00000016   0x4770             BX       LR               ;; return
    312          }
    313          
    314          
    315          /**
    316          * @brief  USB_OTG_BSP_mDelay
    317          *          This function provides delay time in milli sec
    318          * @param  msec : Value of delay required in milli sec
    319          * @retval None
    320          */

   \                                 In section .text, align 2, keep-with-next
    321          void USB_OTG_BSP_mDelay (const uint32_t msec)
    322          {
   \                     USB_OTG_BSP_mDelay: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    323            USB_OTG_BSP_uDelay(msec * 1000);
   \   00000004   0xF44F 0x707A      MOV      R0,#+1000
   \   00000008   0xFB00 0xF004      MUL      R0,R0,R4
   \   0000000C   0x.... 0x....      BL       USB_OTG_BSP_uDelay
    324          }
   \   00000010   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x40020000         DC32     0x40020000
    325          /**
    326          * @}
    327          */
    328          
    329          /**
    330          * @}
    331          */
    332          
    333          /**
    334          * @}
    335          */
    336          
    337          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   USB_OTG_BSP_ConfigVBUS
       0   USB_OTG_BSP_DriveVBUS
      16   USB_OTG_BSP_EnableInterrupt
        16   -> NVIC_Init
        16   -> NVIC_PriorityGroupConfig
      16   USB_OTG_BSP_Init
        16   -> EXTI_ClearITPendingBit
        16   -> GPIO_Init
        16   -> GPIO_PinAFConfig
        16   -> RCC_AHB1PeriphClockCmd
        16   -> RCC_AHB2PeriphClockCmd
        16   -> RCC_APB1PeriphResetCmd
        16   -> RCC_APB2PeriphClockCmd
       8   USB_OTG_BSP_mDelay
         8   -> USB_OTG_BSP_uDelay
       0   USB_OTG_BSP_uDelay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       2  USB_OTG_BSP_ConfigVBUS
       2  USB_OTG_BSP_DriveVBUS
      46  USB_OTG_BSP_EnableInterrupt
     168  USB_OTG_BSP_Init
      18  USB_OTG_BSP_mDelay
      24  USB_OTG_BSP_uDelay

 
 264 bytes in section .text
 
 264 bytes of CODE memory

Errors: none
Warnings: 1
