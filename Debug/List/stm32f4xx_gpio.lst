###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       06/May/2016  23:31:33
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\IAR
#        Workspace\STM32F407\STM32F4-Discovery_FW_V1.1.0\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_gpio.c
#    Command line =  
#        "D:\IAR
#        Workspace\STM32F407\STM32F4-Discovery_FW_V1.1.0\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_gpio.c"
#        -D USE_STDPERIPH_DRIVER -D STM32F4XX -D USE_FULL_ASSERT -lCN "D:\IAR
#        Workspace\STM32F407\VCP_ESP\Debug\List" -o "D:\IAR
#        Workspace\STM32F407\VCP_ESP\Debug\Obj" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\"
#        -I "D:\IAR Workspace\STM32F407\VCP_ESP\..\Libraries\CMSIS\Include\" -I
#        "D:\IAR Workspace\STM32F407\VCP_ESP\..\Utilities\STM32F4-Discovery\"
#        -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\..\Libraries\CMSIS\ST\STM32F4xx\Include\"
#        -I "D:\IAR Workspace\STM32F407\VCP_ESP\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_conf\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_lib\cdc\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_lib\otg\" -I "D:\IAR
#        Workspace\STM32F407\VCP_ESP\usb_lib\core\" -On --use_c++_inline -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        D:\IAR Workspace\STM32F407\VCP_ESP\Debug\List\stm32f4xx_gpio.lst
#    Object file  =  
#        D:\IAR Workspace\STM32F407\VCP_ESP\Debug\Obj\stm32f4xx_gpio.o
#
###############################################################################

D:\IAR Workspace\STM32F407\STM32F4-Discovery_FW_V1.1.0\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_gpio.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32f4xx_gpio.c
      4            * @author  MCD Application Team
      5            * @version V1.0.0
      6            * @date    30-September-2011
      7            * @brief   This file provides firmware functions to manage the following 
      8            *          functionalities of the GPIO peripheral:           
      9            *           - Initialization and Configuration
     10            *           - GPIO Read and Write
     11            *           - GPIO Alternate functions configuration
     12            * 
     13            *  @verbatim
     14            *
     15            *          ===================================================================
     16            *                                 How to use this driver
     17            *          ===================================================================       
     18            *           1. Enable the GPIO AHB clock using the following function
     19            *                RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
     20            *             
     21            *           2. Configure the GPIO pin(s) using GPIO_Init()
     22            *              Four possible configuration are available for each pin:
     23            *                - Input: Floating, Pull-up, Pull-down.
     24            *                - Output: Push-Pull (Pull-up, Pull-down or no Pull)
     25            *                          Open Drain (Pull-up, Pull-down or no Pull).
     26            *                  In output mode, the speed is configurable: 2 MHz, 25 MHz,
     27            *                  50 MHz or 100 MHz.
     28            *                - Alternate Function: Push-Pull (Pull-up, Pull-down or no Pull)
     29            *                                      Open Drain (Pull-up, Pull-down or no Pull).
     30            *                - Analog: required mode when a pin is to be used as ADC channel
     31            *                          or DAC output.
     32            * 
     33            *          3- Peripherals alternate function:
     34            *              - For ADC and DAC, configure the desired pin in analog mode using 
     35            *                  GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AN;
     36            *              - For other peripherals (TIM, USART...):
     37            *                 - Connect the pin to the desired peripherals' Alternate 
     38            *                   Function (AF) using GPIO_PinAFConfig() function
     39            *                 - Configure the desired pin in alternate function mode using
     40            *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
     41            *                 - Select the type, pull-up/pull-down and output speed via 
     42            *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
     43            *                 - Call GPIO_Init() function
     44            *        
     45            *          4. To get the level of a pin configured in input mode use GPIO_ReadInputDataBit()
     46            *          
     47            *          5. To set/reset the level of a pin configured in output mode use
     48            *             GPIO_SetBits()/GPIO_ResetBits()
     49            *               
     50            *          6. During and just after reset, the alternate functions are not 
     51            *             active and the GPIO pins are configured in input floating mode
     52            *             (except JTAG pins).
     53            *
     54            *          7. The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as 
     55            *             general-purpose (PC14 and PC15, respectively) when the LSE
     56            *             oscillator is off. The LSE has priority over the GPIO function.
     57            *
     58            *          8. The HSE oscillator pins OSC_IN/OSC_OUT can be used as 
     59            *             general-purpose PH0 and PH1, respectively, when the HSE 
     60            *             oscillator is off. The HSE has priority over the GPIO function.
     61            *             
     62            *  @endverbatim        
     63            *
     64            ******************************************************************************
     65            * @attention
     66            *
     67            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     68            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     69            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     70            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     71            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     72            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     73            *
     74            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     75            ******************************************************************************
     76            */
     77          
     78          /* Includes ------------------------------------------------------------------*/
     79          #include "stm32f4xx_gpio.h"
     80          #include "stm32f4xx_rcc.h"
     81          
     82          /** @addtogroup STM32F4xx_StdPeriph_Driver
     83            * @{
     84            */
     85          
     86          /** @defgroup GPIO 
     87            * @brief GPIO driver modules
     88            * @{
     89            */ 
     90          
     91          /* Private typedef -----------------------------------------------------------*/
     92          /* Private define ------------------------------------------------------------*/
     93          /* Private macro -------------------------------------------------------------*/
     94          /* Private variables ---------------------------------------------------------*/
     95          /* Private function prototypes -----------------------------------------------*/
     96          /* Private functions ---------------------------------------------------------*/
     97          
     98          /** @defgroup GPIO_Private_Functions
     99            * @{
    100            */ 
    101          
    102          /** @defgroup GPIO_Group1 Initialization and Configuration
    103           *  @brief   Initialization and Configuration
    104           *
    105          @verbatim   
    106           ===============================================================================
    107                                  Initialization and Configuration
    108           ===============================================================================  
    109          
    110          @endverbatim
    111            * @{
    112            */
    113          
    114          /**
    115            * @brief  Deinitializes the GPIOx peripheral registers to their default reset values.
    116            * @note   By default, The GPIO pins are configured in input floating mode (except JTAG pins).
    117            * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
    118            * @retval None
    119            */

   \                                 In section .text, align 2, keep-with-next
    120          void GPIO_DeInit(GPIO_TypeDef* GPIOx)
    121          {
   \                     GPIO_DeInit: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    122            /* Check the parameters */
    123            assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40020000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD024             BEQ.N    ??GPIO_DeInit_0
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable11_1  ;; 0x40020400
   \   00000010   0x4284             CMP      R4,R0
   \   00000012   0xD020             BEQ.N    ??GPIO_DeInit_0
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable11_2  ;; 0x40020800
   \   00000018   0x4284             CMP      R4,R0
   \   0000001A   0xD01C             BEQ.N    ??GPIO_DeInit_0
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable11_3  ;; 0x40020c00
   \   00000020   0x4284             CMP      R4,R0
   \   00000022   0xD018             BEQ.N    ??GPIO_DeInit_0
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable11_4  ;; 0x40021000
   \   00000028   0x4284             CMP      R4,R0
   \   0000002A   0xD014             BEQ.N    ??GPIO_DeInit_0
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x40021400
   \   00000030   0x4284             CMP      R4,R0
   \   00000032   0xD010             BEQ.N    ??GPIO_DeInit_0
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x40021800
   \   00000038   0x4284             CMP      R4,R0
   \   0000003A   0xD00C             BEQ.N    ??GPIO_DeInit_0
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable11_7  ;; 0x40021c00
   \   00000040   0x4284             CMP      R4,R0
   \   00000042   0xD008             BEQ.N    ??GPIO_DeInit_0
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40022000
   \   00000048   0x4284             CMP      R4,R0
   \   0000004A   0xD004             BEQ.N    ??GPIO_DeInit_0
   \   0000004C   0x217B             MOVS     R1,#+123
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   00000052   0x.... 0x....      BL       assert_failed
    124          
    125            if (GPIOx == GPIOA)
   \                     ??GPIO_DeInit_0: (+1)
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40020000
   \   0000005A   0x4284             CMP      R4,R0
   \   0000005C   0xD108             BNE.N    ??GPIO_DeInit_1
    126            {
    127              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, ENABLE);
   \   0000005E   0x2101             MOVS     R1,#+1
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
    128              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0x2001             MOVS     R0,#+1
   \   0000006A   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
   \   0000006E   0xE068             B.N      ??GPIO_DeInit_2
    129            }
    130            else if (GPIOx == GPIOB)
   \                     ??GPIO_DeInit_1: (+1)
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable11_1  ;; 0x40020400
   \   00000074   0x4284             CMP      R4,R0
   \   00000076   0xD108             BNE.N    ??GPIO_DeInit_3
    131            {
    132              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, ENABLE);
   \   00000078   0x2101             MOVS     R1,#+1
   \   0000007A   0x2002             MOVS     R0,#+2
   \   0000007C   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
    133              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
   \   00000080   0x2100             MOVS     R1,#+0
   \   00000082   0x2002             MOVS     R0,#+2
   \   00000084   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
   \   00000088   0xE05B             B.N      ??GPIO_DeInit_2
    134            }
    135            else if (GPIOx == GPIOC)
   \                     ??GPIO_DeInit_3: (+1)
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable11_2  ;; 0x40020800
   \   0000008E   0x4284             CMP      R4,R0
   \   00000090   0xD108             BNE.N    ??GPIO_DeInit_4
    136            {
    137              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, ENABLE);
   \   00000092   0x2101             MOVS     R1,#+1
   \   00000094   0x2004             MOVS     R0,#+4
   \   00000096   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
    138              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
   \   0000009A   0x2100             MOVS     R1,#+0
   \   0000009C   0x2004             MOVS     R0,#+4
   \   0000009E   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
   \   000000A2   0xE04E             B.N      ??GPIO_DeInit_2
    139            }
    140            else if (GPIOx == GPIOD)
   \                     ??GPIO_DeInit_4: (+1)
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable11_3  ;; 0x40020c00
   \   000000A8   0x4284             CMP      R4,R0
   \   000000AA   0xD108             BNE.N    ??GPIO_DeInit_5
    141            {
    142              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, ENABLE);
   \   000000AC   0x2101             MOVS     R1,#+1
   \   000000AE   0x2008             MOVS     R0,#+8
   \   000000B0   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
    143              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
   \   000000B4   0x2100             MOVS     R1,#+0
   \   000000B6   0x2008             MOVS     R0,#+8
   \   000000B8   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
   \   000000BC   0xE041             B.N      ??GPIO_DeInit_2
    144            }
    145            else if (GPIOx == GPIOE)
   \                     ??GPIO_DeInit_5: (+1)
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable11_4  ;; 0x40021000
   \   000000C2   0x4284             CMP      R4,R0
   \   000000C4   0xD108             BNE.N    ??GPIO_DeInit_6
    146            {
    147              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, ENABLE);
   \   000000C6   0x2101             MOVS     R1,#+1
   \   000000C8   0x2010             MOVS     R0,#+16
   \   000000CA   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
    148              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
   \   000000CE   0x2100             MOVS     R1,#+0
   \   000000D0   0x2010             MOVS     R0,#+16
   \   000000D2   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
   \   000000D6   0xE034             B.N      ??GPIO_DeInit_2
    149            }
    150            else if (GPIOx == GPIOF)
   \                     ??GPIO_DeInit_6: (+1)
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x40021400
   \   000000DC   0x4284             CMP      R4,R0
   \   000000DE   0xD108             BNE.N    ??GPIO_DeInit_7
    151            {
    152              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, ENABLE);
   \   000000E0   0x2101             MOVS     R1,#+1
   \   000000E2   0x2020             MOVS     R0,#+32
   \   000000E4   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
    153              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
   \   000000E8   0x2100             MOVS     R1,#+0
   \   000000EA   0x2020             MOVS     R0,#+32
   \   000000EC   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
   \   000000F0   0xE027             B.N      ??GPIO_DeInit_2
    154            }
    155            else if (GPIOx == GPIOG)
   \                     ??GPIO_DeInit_7: (+1)
   \   000000F2   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x40021800
   \   000000F6   0x4284             CMP      R4,R0
   \   000000F8   0xD108             BNE.N    ??GPIO_DeInit_8
    156            {
    157              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, ENABLE);
   \   000000FA   0x2101             MOVS     R1,#+1
   \   000000FC   0x2040             MOVS     R0,#+64
   \   000000FE   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
    158              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
   \   00000102   0x2100             MOVS     R1,#+0
   \   00000104   0x2040             MOVS     R0,#+64
   \   00000106   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
   \   0000010A   0xE01A             B.N      ??GPIO_DeInit_2
    159            }
    160            else if (GPIOx == GPIOH)
   \                     ??GPIO_DeInit_8: (+1)
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable11_7  ;; 0x40021c00
   \   00000110   0x4284             CMP      R4,R0
   \   00000112   0xD108             BNE.N    ??GPIO_DeInit_9
    161            {
    162              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, ENABLE);
   \   00000114   0x2101             MOVS     R1,#+1
   \   00000116   0x2080             MOVS     R0,#+128
   \   00000118   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
    163              RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
   \   0000011C   0x2100             MOVS     R1,#+0
   \   0000011E   0x2080             MOVS     R0,#+128
   \   00000120   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
   \   00000124   0xE00D             B.N      ??GPIO_DeInit_2
    164            }
    165            else
    166            {
    167              if (GPIOx == GPIOI)
   \                     ??GPIO_DeInit_9: (+1)
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40022000
   \   0000012A   0x4284             CMP      R4,R0
   \   0000012C   0xD109             BNE.N    ??GPIO_DeInit_2
    168              {
    169                RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, ENABLE);
   \   0000012E   0x2101             MOVS     R1,#+1
   \   00000130   0xF44F 0x7080      MOV      R0,#+256
   \   00000134   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
    170                RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
   \   00000138   0x2100             MOVS     R1,#+0
   \   0000013A   0xF44F 0x7080      MOV      R0,#+256
   \   0000013E   0x.... 0x....      BL       RCC_AHB1PeriphResetCmd
    171              }
    172            }
    173          }
   \                     ??GPIO_DeInit_2: (+1)
   \   00000142   0xBD10             POP      {R4,PC}          ;; return
    174          
    175          /**
    176            * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_InitStruct.
    177            * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
    178            * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
    179            *         the configuration information for the specified GPIO peripheral.
    180            * @retval None
    181            */

   \                                 In section .text, align 2, keep-with-next
    182          void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
    183          {
   \                     GPIO_Init: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    184            uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    185          
    186            /* Check the parameters */
    187            assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40020000
   \   00000014   0x4284             CMP      R4,R0
   \   00000016   0xD024             BEQ.N    ??GPIO_Init_0
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable11_1  ;; 0x40020400
   \   0000001C   0x4284             CMP      R4,R0
   \   0000001E   0xD020             BEQ.N    ??GPIO_Init_0
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable11_2  ;; 0x40020800
   \   00000024   0x4284             CMP      R4,R0
   \   00000026   0xD01C             BEQ.N    ??GPIO_Init_0
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable11_3  ;; 0x40020c00
   \   0000002C   0x4284             CMP      R4,R0
   \   0000002E   0xD018             BEQ.N    ??GPIO_Init_0
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable11_4  ;; 0x40021000
   \   00000034   0x4284             CMP      R4,R0
   \   00000036   0xD014             BEQ.N    ??GPIO_Init_0
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x40021400
   \   0000003C   0x4284             CMP      R4,R0
   \   0000003E   0xD010             BEQ.N    ??GPIO_Init_0
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x40021800
   \   00000044   0x4284             CMP      R4,R0
   \   00000046   0xD00C             BEQ.N    ??GPIO_Init_0
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable11_7  ;; 0x40021c00
   \   0000004C   0x4284             CMP      R4,R0
   \   0000004E   0xD008             BEQ.N    ??GPIO_Init_0
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40022000
   \   00000054   0x4284             CMP      R4,R0
   \   00000056   0xD004             BEQ.N    ??GPIO_Init_0
   \   00000058   0x21BB             MOVS     R1,#+187
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   0000005E   0x.... 0x....      BL       assert_failed
    188            assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
   \                     ??GPIO_Init_0: (+1)
   \   00000062   0x6828             LDR      R0,[R5, #+0]
   \   00000064   0x2800             CMP      R0,#+0
   \   00000066   0xD104             BNE.N    ??GPIO_Init_1
   \   00000068   0x21BC             MOVS     R1,#+188
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   0000006E   0x.... 0x....      BL       assert_failed
    189            assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
   \                     ??GPIO_Init_1: (+1)
   \   00000072   0x7928             LDRB     R0,[R5, #+4]
   \   00000074   0x2800             CMP      R0,#+0
   \   00000076   0xD00D             BEQ.N    ??GPIO_Init_2
   \   00000078   0x7928             LDRB     R0,[R5, #+4]
   \   0000007A   0x2801             CMP      R0,#+1
   \   0000007C   0xD00A             BEQ.N    ??GPIO_Init_2
   \   0000007E   0x7928             LDRB     R0,[R5, #+4]
   \   00000080   0x2802             CMP      R0,#+2
   \   00000082   0xD007             BEQ.N    ??GPIO_Init_2
   \   00000084   0x7928             LDRB     R0,[R5, #+4]
   \   00000086   0x2803             CMP      R0,#+3
   \   00000088   0xD004             BEQ.N    ??GPIO_Init_2
   \   0000008A   0x21BD             MOVS     R1,#+189
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   00000090   0x.... 0x....      BL       assert_failed
    190            assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
   \                     ??GPIO_Init_2: (+1)
   \   00000094   0x79E8             LDRB     R0,[R5, #+7]
   \   00000096   0x2800             CMP      R0,#+0
   \   00000098   0xD00A             BEQ.N    ??GPIO_Init_3
   \   0000009A   0x79E8             LDRB     R0,[R5, #+7]
   \   0000009C   0x2801             CMP      R0,#+1
   \   0000009E   0xD007             BEQ.N    ??GPIO_Init_3
   \   000000A0   0x79E8             LDRB     R0,[R5, #+7]
   \   000000A2   0x2802             CMP      R0,#+2
   \   000000A4   0xD004             BEQ.N    ??GPIO_Init_3
   \   000000A6   0x21BE             MOVS     R1,#+190
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   000000AC   0x.... 0x....      BL       assert_failed
    191          
    192            /* -------------------------Configure the port pins---------------- */
    193            /*-- GPIO Mode Configuration --*/
    194            for (pinpos = 0x00; pinpos < 0x10; pinpos++)
   \                     ??GPIO_Init_3: (+1)
   \   000000B0   0x2000             MOVS     R0,#+0
   \   000000B2   0x0006             MOVS     R6,R0
   \                     ??GPIO_Init_4: (+1)
   \   000000B4   0x2E10             CMP      R6,#+16
   \   000000B6   0xD266             BCS.N    ??GPIO_Init_5
    195            {
    196              pos = ((uint32_t)0x01) << pinpos;
   \   000000B8   0x2001             MOVS     R0,#+1
   \   000000BA   0x40B0             LSLS     R0,R0,R6
   \   000000BC   0x0007             MOVS     R7,R0
    197              /* Get the port pins position */
    198              currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
   \   000000BE   0x6828             LDR      R0,[R5, #+0]
   \   000000C0   0x4038             ANDS     R0,R7,R0
   \   000000C2   0x4680             MOV      R8,R0
    199          
    200              if (currentpin == pos)
   \   000000C4   0x45B8             CMP      R8,R7
   \   000000C6   0xD15C             BNE.N    ??GPIO_Init_6
    201              {
    202                GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
   \   000000C8   0x6820             LDR      R0,[R4, #+0]
   \   000000CA   0x2103             MOVS     R1,#+3
   \   000000CC   0x0032             MOVS     R2,R6
   \   000000CE   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000D0   0x0052             LSLS     R2,R2,#+1
   \   000000D2   0x4091             LSLS     R1,R1,R2
   \   000000D4   0x4388             BICS     R0,R0,R1
   \   000000D6   0x6020             STR      R0,[R4, #+0]
    203                GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
   \   000000D8   0x6820             LDR      R0,[R4, #+0]
   \   000000DA   0x7929             LDRB     R1,[R5, #+4]
   \   000000DC   0x0032             MOVS     R2,R6
   \   000000DE   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000E0   0x0052             LSLS     R2,R2,#+1
   \   000000E2   0x4091             LSLS     R1,R1,R2
   \   000000E4   0x4308             ORRS     R0,R1,R0
   \   000000E6   0x6020             STR      R0,[R4, #+0]
    204          
    205                if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_AF))
   \   000000E8   0x7928             LDRB     R0,[R5, #+4]
   \   000000EA   0x2801             CMP      R0,#+1
   \   000000EC   0xD002             BEQ.N    ??GPIO_Init_7
   \   000000EE   0x7928             LDRB     R0,[R5, #+4]
   \   000000F0   0x2802             CMP      R0,#+2
   \   000000F2   0xD136             BNE.N    ??GPIO_Init_8
    206                {
    207                  /* Check Speed mode parameters */
    208                  assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
   \                     ??GPIO_Init_7: (+1)
   \   000000F4   0x7968             LDRB     R0,[R5, #+5]
   \   000000F6   0x2800             CMP      R0,#+0
   \   000000F8   0xD00D             BEQ.N    ??GPIO_Init_9
   \   000000FA   0x7968             LDRB     R0,[R5, #+5]
   \   000000FC   0x2801             CMP      R0,#+1
   \   000000FE   0xD00A             BEQ.N    ??GPIO_Init_9
   \   00000100   0x7968             LDRB     R0,[R5, #+5]
   \   00000102   0x2802             CMP      R0,#+2
   \   00000104   0xD007             BEQ.N    ??GPIO_Init_9
   \   00000106   0x7968             LDRB     R0,[R5, #+5]
   \   00000108   0x2803             CMP      R0,#+3
   \   0000010A   0xD004             BEQ.N    ??GPIO_Init_9
   \   0000010C   0x21D0             MOVS     R1,#+208
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   00000112   0x.... 0x....      BL       assert_failed
    209          
    210                  /* Speed mode configuration */
    211                  GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
   \                     ??GPIO_Init_9: (+1)
   \   00000116   0x68A0             LDR      R0,[R4, #+8]
   \   00000118   0x2103             MOVS     R1,#+3
   \   0000011A   0x0032             MOVS     R2,R6
   \   0000011C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000011E   0x0052             LSLS     R2,R2,#+1
   \   00000120   0x4091             LSLS     R1,R1,R2
   \   00000122   0x4388             BICS     R0,R0,R1
   \   00000124   0x60A0             STR      R0,[R4, #+8]
    212                  GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
   \   00000126   0x68A0             LDR      R0,[R4, #+8]
   \   00000128   0x7969             LDRB     R1,[R5, #+5]
   \   0000012A   0x0032             MOVS     R2,R6
   \   0000012C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000012E   0x0052             LSLS     R2,R2,#+1
   \   00000130   0x4091             LSLS     R1,R1,R2
   \   00000132   0x4308             ORRS     R0,R1,R0
   \   00000134   0x60A0             STR      R0,[R4, #+8]
    213          
    214                  /* Check Output mode parameters */
    215                  assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
   \   00000136   0x79A8             LDRB     R0,[R5, #+6]
   \   00000138   0x2800             CMP      R0,#+0
   \   0000013A   0xD007             BEQ.N    ??GPIO_Init_10
   \   0000013C   0x79A8             LDRB     R0,[R5, #+6]
   \   0000013E   0x2801             CMP      R0,#+1
   \   00000140   0xD004             BEQ.N    ??GPIO_Init_10
   \   00000142   0x21D7             MOVS     R1,#+215
   \   00000144   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   00000148   0x.... 0x....      BL       assert_failed
    216          
    217                  /* Output mode configuration*/
    218                  GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
   \                     ??GPIO_Init_10: (+1)
   \   0000014C   0x6860             LDR      R0,[R4, #+4]
   \   0000014E   0x2101             MOVS     R1,#+1
   \   00000150   0x40B1             LSLS     R1,R1,R6
   \   00000152   0x4388             BICS     R0,R0,R1
   \   00000154   0x6060             STR      R0,[R4, #+4]
    219                  GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
   \   00000156   0x6860             LDR      R0,[R4, #+4]
   \   00000158   0x79A9             LDRB     R1,[R5, #+6]
   \   0000015A   0x40B1             LSLS     R1,R1,R6
   \   0000015C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000015E   0x4308             ORRS     R0,R1,R0
   \   00000160   0x6060             STR      R0,[R4, #+4]
    220                }
    221          
    222                /* Pull-up Pull down resistor configuration*/
    223                GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
   \                     ??GPIO_Init_8: (+1)
   \   00000162   0x68E0             LDR      R0,[R4, #+12]
   \   00000164   0x2103             MOVS     R1,#+3
   \   00000166   0x0032             MOVS     R2,R6
   \   00000168   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000016A   0x0052             LSLS     R2,R2,#+1
   \   0000016C   0x4091             LSLS     R1,R1,R2
   \   0000016E   0x4388             BICS     R0,R0,R1
   \   00000170   0x60E0             STR      R0,[R4, #+12]
    224                GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
   \   00000172   0x68E0             LDR      R0,[R4, #+12]
   \   00000174   0x79E9             LDRB     R1,[R5, #+7]
   \   00000176   0x0032             MOVS     R2,R6
   \   00000178   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000017A   0x0052             LSLS     R2,R2,#+1
   \   0000017C   0x4091             LSLS     R1,R1,R2
   \   0000017E   0x4308             ORRS     R0,R1,R0
   \   00000180   0x60E0             STR      R0,[R4, #+12]
    225              }
    226            }
   \                     ??GPIO_Init_6: (+1)
   \   00000182   0x1C76             ADDS     R6,R6,#+1
   \   00000184   0xE796             B.N      ??GPIO_Init_4
    227          }
   \                     ??GPIO_Init_5: (+1)
   \   00000186   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    228          
    229          /**
    230            * @brief  Fills each GPIO_InitStruct member with its default value.
    231            * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will be initialized.
    232            * @retval None
    233            */

   \                                 In section .text, align 2, keep-with-next
    234          void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
    235          {
    236            /* Reset GPIO init structure parameters values */
    237            GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
   \                     GPIO_StructInit: (+1)
   \   00000000   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000004   0x6001             STR      R1,[R0, #+0]
    238            GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x7101             STRB     R1,[R0, #+4]
    239            GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x7141             STRB     R1,[R0, #+5]
    240            GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x7181             STRB     R1,[R0, #+6]
    241            GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x71C1             STRB     R1,[R0, #+7]
    242          }
   \   00000016   0x4770             BX       LR               ;; return
    243          
    244          /**
    245            * @brief  Locks GPIO Pins configuration registers.
    246            * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
    247            *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
    248            * @note   The configuration of the locked GPIO pins can no longer be modified
    249            *         until the next reset.
    250            * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
    251            * @param  GPIO_Pin: specifies the port bit to be locked.
    252            *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
    253            * @retval None
    254            */

   \                                 In section .text, align 2, keep-with-next
    255          void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
    256          {
   \                     GPIO_PinLockConfig: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    257            __IO uint32_t tmp = 0x00010000;
   \   00000006   0xF45F 0x3080      MOVS     R0,#+65536
   \   0000000A   0x9000             STR      R0,[SP, #+0]
    258          
    259            /* Check the parameters */
    260            assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40020000
   \   00000010   0x4284             CMP      R4,R0
   \   00000012   0xD025             BEQ.N    ??GPIO_PinLockConfig_0
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable11_1  ;; 0x40020400
   \   00000018   0x4284             CMP      R4,R0
   \   0000001A   0xD021             BEQ.N    ??GPIO_PinLockConfig_0
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable11_2  ;; 0x40020800
   \   00000020   0x4284             CMP      R4,R0
   \   00000022   0xD01D             BEQ.N    ??GPIO_PinLockConfig_0
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable11_3  ;; 0x40020c00
   \   00000028   0x4284             CMP      R4,R0
   \   0000002A   0xD019             BEQ.N    ??GPIO_PinLockConfig_0
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable11_4  ;; 0x40021000
   \   00000030   0x4284             CMP      R4,R0
   \   00000032   0xD015             BEQ.N    ??GPIO_PinLockConfig_0
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x40021400
   \   00000038   0x4284             CMP      R4,R0
   \   0000003A   0xD011             BEQ.N    ??GPIO_PinLockConfig_0
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x40021800
   \   00000040   0x4284             CMP      R4,R0
   \   00000042   0xD00D             BEQ.N    ??GPIO_PinLockConfig_0
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable11_7  ;; 0x40021c00
   \   00000048   0x4284             CMP      R4,R0
   \   0000004A   0xD009             BEQ.N    ??GPIO_PinLockConfig_0
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40022000
   \   00000050   0x4284             CMP      R4,R0
   \   00000052   0xD005             BEQ.N    ??GPIO_PinLockConfig_0
   \   00000054   0xF44F 0x7182      MOV      R1,#+260
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   0000005C   0x.... 0x....      BL       assert_failed
    261            assert_param(IS_GPIO_PIN(GPIO_Pin));
   \                     ??GPIO_PinLockConfig_0: (+1)
   \   00000060   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000062   0x2D00             CMP      R5,#+0
   \   00000064   0xD105             BNE.N    ??GPIO_PinLockConfig_1
   \   00000066   0xF240 0x1105      MOVW     R1,#+261
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   0000006E   0x.... 0x....      BL       assert_failed
    262          
    263            tmp |= GPIO_Pin;
   \                     ??GPIO_PinLockConfig_1: (+1)
   \   00000072   0x9800             LDR      R0,[SP, #+0]
   \   00000074   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000076   0x4328             ORRS     R0,R5,R0
   \   00000078   0x9000             STR      R0,[SP, #+0]
    264            /* Set LCKK bit */
    265            GPIOx->LCKR = tmp;
   \   0000007A   0x9800             LDR      R0,[SP, #+0]
   \   0000007C   0x61E0             STR      R0,[R4, #+28]
    266            /* Reset LCKK bit */
    267            GPIOx->LCKR =  GPIO_Pin;
   \   0000007E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000080   0x61E5             STR      R5,[R4, #+28]
    268            /* Set LCKK bit */
    269            GPIOx->LCKR = tmp;
   \   00000082   0x9800             LDR      R0,[SP, #+0]
   \   00000084   0x61E0             STR      R0,[R4, #+28]
    270            /* Read LCKK bit*/
    271            tmp = GPIOx->LCKR;
   \   00000086   0x69E0             LDR      R0,[R4, #+28]
   \   00000088   0x9000             STR      R0,[SP, #+0]
    272            /* Read LCKK bit*/
    273            tmp = GPIOx->LCKR;
   \   0000008A   0x69E0             LDR      R0,[R4, #+28]
   \   0000008C   0x9000             STR      R0,[SP, #+0]
    274          }
   \   0000008E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    275          
    276          /**
    277            * @}
    278            */
    279          
    280          /** @defgroup GPIO_Group2 GPIO Read and Write
    281           *  @brief   GPIO Read and Write
    282           *
    283          @verbatim   
    284           ===============================================================================
    285                                        GPIO Read and Write
    286           ===============================================================================  
    287          
    288          @endverbatim
    289            * @{
    290            */
    291          
    292          /**
    293            * @brief  Reads the specified input port pin.
    294            * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
    295            * @param  GPIO_Pin: specifies the port bit to read.
    296            *         This parameter can be GPIO_Pin_x where x can be (0..15).
    297            * @retval The input port pin value.
    298            */

   \                                 In section .text, align 2, keep-with-next
    299          uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
    300          {
   \                     GPIO_ReadInputDataBit: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    301            uint8_t bitstatus = 0x00;
   \   00000006   0x2600             MOVS     R6,#+0
    302          
    303            /* Check the parameters */
    304            assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40020000
   \   0000000C   0x4284             CMP      R4,R0
   \   0000000E   0xD025             BEQ.N    ??GPIO_ReadInputDataBit_0
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable11_1  ;; 0x40020400
   \   00000014   0x4284             CMP      R4,R0
   \   00000016   0xD021             BEQ.N    ??GPIO_ReadInputDataBit_0
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable11_2  ;; 0x40020800
   \   0000001C   0x4284             CMP      R4,R0
   \   0000001E   0xD01D             BEQ.N    ??GPIO_ReadInputDataBit_0
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable11_3  ;; 0x40020c00
   \   00000024   0x4284             CMP      R4,R0
   \   00000026   0xD019             BEQ.N    ??GPIO_ReadInputDataBit_0
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable11_4  ;; 0x40021000
   \   0000002C   0x4284             CMP      R4,R0
   \   0000002E   0xD015             BEQ.N    ??GPIO_ReadInputDataBit_0
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x40021400
   \   00000034   0x4284             CMP      R4,R0
   \   00000036   0xD011             BEQ.N    ??GPIO_ReadInputDataBit_0
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x40021800
   \   0000003C   0x4284             CMP      R4,R0
   \   0000003E   0xD00D             BEQ.N    ??GPIO_ReadInputDataBit_0
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable11_7  ;; 0x40021c00
   \   00000044   0x4284             CMP      R4,R0
   \   00000046   0xD009             BEQ.N    ??GPIO_ReadInputDataBit_0
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40022000
   \   0000004C   0x4284             CMP      R4,R0
   \   0000004E   0xD005             BEQ.N    ??GPIO_ReadInputDataBit_0
   \   00000050   0xF44F 0x7198      MOV      R1,#+304
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   00000058   0x.... 0x....      BL       assert_failed
    305            assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
   \                     ??GPIO_ReadInputDataBit_0: (+1)
   \   0000005C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000005E   0x2D01             CMP      R5,#+1
   \   00000060   0xD03A             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   00000062   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000064   0x2D02             CMP      R5,#+2
   \   00000066   0xD037             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   00000068   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000006A   0x2D04             CMP      R5,#+4
   \   0000006C   0xD034             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   0000006E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000070   0x2D08             CMP      R5,#+8
   \   00000072   0xD031             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   00000074   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000076   0x2D10             CMP      R5,#+16
   \   00000078   0xD02E             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   0000007A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000007C   0x2D20             CMP      R5,#+32
   \   0000007E   0xD02B             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   00000080   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000082   0x2D40             CMP      R5,#+64
   \   00000084   0xD028             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   00000086   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000088   0x2D80             CMP      R5,#+128
   \   0000008A   0xD025             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   0000008C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000008E   0xF5B5 0x7F80      CMP      R5,#+256
   \   00000092   0xD021             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   00000094   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000096   0xF5B5 0x7F00      CMP      R5,#+512
   \   0000009A   0xD01D             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   0000009C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000009E   0xF5B5 0x6F80      CMP      R5,#+1024
   \   000000A2   0xD019             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   000000A4   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000A6   0xF5B5 0x6F00      CMP      R5,#+2048
   \   000000AA   0xD015             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   000000AC   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000AE   0xF5B5 0x5F80      CMP      R5,#+4096
   \   000000B2   0xD011             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   000000B4   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000B6   0xF5B5 0x5F00      CMP      R5,#+8192
   \   000000BA   0xD00D             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   000000BC   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000BE   0xF5B5 0x4F80      CMP      R5,#+16384
   \   000000C2   0xD009             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   000000C4   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000C6   0xF5B5 0x4F00      CMP      R5,#+32768
   \   000000CA   0xD005             BEQ.N    ??GPIO_ReadInputDataBit_1
   \   000000CC   0xF240 0x1131      MOVW     R1,#+305
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   000000D4   0x.... 0x....      BL       assert_failed
    306          
    307            if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
   \                     ??GPIO_ReadInputDataBit_1: (+1)
   \   000000D8   0x6920             LDR      R0,[R4, #+16]
   \   000000DA   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000DC   0x4228             TST      R0,R5
   \   000000DE   0xD002             BEQ.N    ??GPIO_ReadInputDataBit_2
    308            {
    309              bitstatus = (uint8_t)Bit_SET;
   \   000000E0   0x2001             MOVS     R0,#+1
   \   000000E2   0x0006             MOVS     R6,R0
   \   000000E4   0xE001             B.N      ??GPIO_ReadInputDataBit_3
    310            }
    311            else
    312            {
    313              bitstatus = (uint8_t)Bit_RESET;
   \                     ??GPIO_ReadInputDataBit_2: (+1)
   \   000000E6   0x2000             MOVS     R0,#+0
   \   000000E8   0x0006             MOVS     R6,R0
    314            }
    315            return bitstatus;
   \                     ??GPIO_ReadInputDataBit_3: (+1)
   \   000000EA   0x0030             MOVS     R0,R6
   \   000000EC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000EE   0xBD70             POP      {R4-R6,PC}       ;; return
    316          }
    317          
    318          /**
    319            * @brief  Reads the specified GPIO input data port.
    320            * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
    321            * @retval GPIO input data port value.
    322            */

   \                                 In section .text, align 2, keep-with-next
    323          uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
    324          {
   \                     GPIO_ReadInputData: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    325            /* Check the parameters */
    326            assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40020000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD025             BEQ.N    ??GPIO_ReadInputData_0
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable11_1  ;; 0x40020400
   \   00000010   0x4284             CMP      R4,R0
   \   00000012   0xD021             BEQ.N    ??GPIO_ReadInputData_0
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable11_2  ;; 0x40020800
   \   00000018   0x4284             CMP      R4,R0
   \   0000001A   0xD01D             BEQ.N    ??GPIO_ReadInputData_0
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable11_3  ;; 0x40020c00
   \   00000020   0x4284             CMP      R4,R0
   \   00000022   0xD019             BEQ.N    ??GPIO_ReadInputData_0
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable11_4  ;; 0x40021000
   \   00000028   0x4284             CMP      R4,R0
   \   0000002A   0xD015             BEQ.N    ??GPIO_ReadInputData_0
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x40021400
   \   00000030   0x4284             CMP      R4,R0
   \   00000032   0xD011             BEQ.N    ??GPIO_ReadInputData_0
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x40021800
   \   00000038   0x4284             CMP      R4,R0
   \   0000003A   0xD00D             BEQ.N    ??GPIO_ReadInputData_0
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable11_7  ;; 0x40021c00
   \   00000040   0x4284             CMP      R4,R0
   \   00000042   0xD009             BEQ.N    ??GPIO_ReadInputData_0
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40022000
   \   00000048   0x4284             CMP      R4,R0
   \   0000004A   0xD005             BEQ.N    ??GPIO_ReadInputData_0
   \   0000004C   0xF44F 0x71A3      MOV      R1,#+326
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   00000054   0x.... 0x....      BL       assert_failed
    327          
    328            return ((uint16_t)GPIOx->IDR);
   \                     ??GPIO_ReadInputData_0: (+1)
   \   00000058   0x6920             LDR      R0,[R4, #+16]
   \   0000005A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000005C   0xBD10             POP      {R4,PC}          ;; return
    329          }
    330          
    331          /**
    332            * @brief  Reads the specified output data port bit.
    333            * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
    334            * @param  GPIO_Pin: specifies the port bit to read.
    335            *          This parameter can be GPIO_Pin_x where x can be (0..15).
    336            * @retval The output port pin value.
    337            */

   \                                 In section .text, align 2, keep-with-next
    338          uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
    339          {
   \                     GPIO_ReadOutputDataBit: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    340            uint8_t bitstatus = 0x00;
   \   00000006   0x2600             MOVS     R6,#+0
    341          
    342            /* Check the parameters */
    343            assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40020000
   \   0000000C   0x4284             CMP      R4,R0
   \   0000000E   0xD025             BEQ.N    ??GPIO_ReadOutputDataBit_0
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable11_1  ;; 0x40020400
   \   00000014   0x4284             CMP      R4,R0
   \   00000016   0xD021             BEQ.N    ??GPIO_ReadOutputDataBit_0
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable11_2  ;; 0x40020800
   \   0000001C   0x4284             CMP      R4,R0
   \   0000001E   0xD01D             BEQ.N    ??GPIO_ReadOutputDataBit_0
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable11_3  ;; 0x40020c00
   \   00000024   0x4284             CMP      R4,R0
   \   00000026   0xD019             BEQ.N    ??GPIO_ReadOutputDataBit_0
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable11_4  ;; 0x40021000
   \   0000002C   0x4284             CMP      R4,R0
   \   0000002E   0xD015             BEQ.N    ??GPIO_ReadOutputDataBit_0
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x40021400
   \   00000034   0x4284             CMP      R4,R0
   \   00000036   0xD011             BEQ.N    ??GPIO_ReadOutputDataBit_0
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x40021800
   \   0000003C   0x4284             CMP      R4,R0
   \   0000003E   0xD00D             BEQ.N    ??GPIO_ReadOutputDataBit_0
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable11_7  ;; 0x40021c00
   \   00000044   0x4284             CMP      R4,R0
   \   00000046   0xD009             BEQ.N    ??GPIO_ReadOutputDataBit_0
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40022000
   \   0000004C   0x4284             CMP      R4,R0
   \   0000004E   0xD005             BEQ.N    ??GPIO_ReadOutputDataBit_0
   \   00000050   0xF240 0x1157      MOVW     R1,#+343
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   00000058   0x.... 0x....      BL       assert_failed
    344            assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
   \                     ??GPIO_ReadOutputDataBit_0: (+1)
   \   0000005C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000005E   0x2D01             CMP      R5,#+1
   \   00000060   0xD039             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   00000062   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000064   0x2D02             CMP      R5,#+2
   \   00000066   0xD036             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   00000068   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000006A   0x2D04             CMP      R5,#+4
   \   0000006C   0xD033             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   0000006E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000070   0x2D08             CMP      R5,#+8
   \   00000072   0xD030             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   00000074   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000076   0x2D10             CMP      R5,#+16
   \   00000078   0xD02D             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   0000007A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000007C   0x2D20             CMP      R5,#+32
   \   0000007E   0xD02A             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   00000080   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000082   0x2D40             CMP      R5,#+64
   \   00000084   0xD027             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   00000086   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000088   0x2D80             CMP      R5,#+128
   \   0000008A   0xD024             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   0000008C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000008E   0xF5B5 0x7F80      CMP      R5,#+256
   \   00000092   0xD020             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   00000094   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000096   0xF5B5 0x7F00      CMP      R5,#+512
   \   0000009A   0xD01C             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   0000009C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000009E   0xF5B5 0x6F80      CMP      R5,#+1024
   \   000000A2   0xD018             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   000000A4   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000A6   0xF5B5 0x6F00      CMP      R5,#+2048
   \   000000AA   0xD014             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   000000AC   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000AE   0xF5B5 0x5F80      CMP      R5,#+4096
   \   000000B2   0xD010             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   000000B4   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000B6   0xF5B5 0x5F00      CMP      R5,#+8192
   \   000000BA   0xD00C             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   000000BC   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000BE   0xF5B5 0x4F80      CMP      R5,#+16384
   \   000000C2   0xD008             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   000000C4   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000C6   0xF5B5 0x4F00      CMP      R5,#+32768
   \   000000CA   0xD004             BEQ.N    ??GPIO_ReadOutputDataBit_1
   \   000000CC   0xF44F 0x71AC      MOV      R1,#+344
   \   000000D0   0x....             LDR.N    R0,??DataTable11_8
   \   000000D2   0x.... 0x....      BL       assert_failed
    345          
    346            if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
   \                     ??GPIO_ReadOutputDataBit_1: (+1)
   \   000000D6   0x6960             LDR      R0,[R4, #+20]
   \   000000D8   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000DA   0x4228             TST      R0,R5
   \   000000DC   0xD002             BEQ.N    ??GPIO_ReadOutputDataBit_2
    347            {
    348              bitstatus = (uint8_t)Bit_SET;
   \   000000DE   0x2001             MOVS     R0,#+1
   \   000000E0   0x0006             MOVS     R6,R0
   \   000000E2   0xE001             B.N      ??GPIO_ReadOutputDataBit_3
    349            }
    350            else
    351            {
    352              bitstatus = (uint8_t)Bit_RESET;
   \                     ??GPIO_ReadOutputDataBit_2: (+1)
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x0006             MOVS     R6,R0
    353            }
    354            return bitstatus;
   \                     ??GPIO_ReadOutputDataBit_3: (+1)
   \   000000E8   0x0030             MOVS     R0,R6
   \   000000EA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000EC   0xBD70             POP      {R4-R6,PC}       ;; return
    355          }
    356          
    357          /**
    358            * @brief  Reads the specified GPIO output data port.
    359            * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
    360            * @retval GPIO output data port value.
    361            */

   \                                 In section .text, align 2, keep-with-next
    362          uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
    363          {
   \                     GPIO_ReadOutputData: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    364            /* Check the parameters */
    365            assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
   \   00000004   0x....             LDR.N    R0,??DataTable11  ;; 0x40020000
   \   00000006   0x4284             CMP      R4,R0
   \   00000008   0xD01D             BEQ.N    ??GPIO_ReadOutputData_0
   \   0000000A   0x....             LDR.N    R0,??DataTable11_1  ;; 0x40020400
   \   0000000C   0x4284             CMP      R4,R0
   \   0000000E   0xD01A             BEQ.N    ??GPIO_ReadOutputData_0
   \   00000010   0x....             LDR.N    R0,??DataTable11_2  ;; 0x40020800
   \   00000012   0x4284             CMP      R4,R0
   \   00000014   0xD017             BEQ.N    ??GPIO_ReadOutputData_0
   \   00000016   0x....             LDR.N    R0,??DataTable11_3  ;; 0x40020c00
   \   00000018   0x4284             CMP      R4,R0
   \   0000001A   0xD014             BEQ.N    ??GPIO_ReadOutputData_0
   \   0000001C   0x....             LDR.N    R0,??DataTable11_4  ;; 0x40021000
   \   0000001E   0x4284             CMP      R4,R0
   \   00000020   0xD011             BEQ.N    ??GPIO_ReadOutputData_0
   \   00000022   0x....             LDR.N    R0,??DataTable11_5  ;; 0x40021400
   \   00000024   0x4284             CMP      R4,R0
   \   00000026   0xD00E             BEQ.N    ??GPIO_ReadOutputData_0
   \   00000028   0x....             LDR.N    R0,??DataTable11_6  ;; 0x40021800
   \   0000002A   0x4284             CMP      R4,R0
   \   0000002C   0xD00B             BEQ.N    ??GPIO_ReadOutputData_0
   \   0000002E   0x....             LDR.N    R0,??DataTable11_7  ;; 0x40021c00
   \   00000030   0x4284             CMP      R4,R0
   \   00000032   0xD008             BEQ.N    ??GPIO_ReadOutputData_0
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40022000
   \   00000038   0x4284             CMP      R4,R0
   \   0000003A   0xD004             BEQ.N    ??GPIO_ReadOutputData_0
   \   0000003C   0xF240 0x116D      MOVW     R1,#+365
   \   00000040   0x....             LDR.N    R0,??DataTable11_8
   \   00000042   0x.... 0x....      BL       assert_failed
    366          
    367            return ((uint16_t)GPIOx->ODR);
   \                     ??GPIO_ReadOutputData_0: (+1)
   \   00000046   0x6960             LDR      R0,[R4, #+20]
   \   00000048   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004A   0xBD10             POP      {R4,PC}          ;; return
    368          }
    369          
    370          /**
    371            * @brief  Sets the selected data port bits.
    372            * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
    373            *         accesses. In this way, there is no risk of an IRQ occurring between
    374            *         the read and the modify access.
    375            * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
    376            * @param  GPIO_Pin: specifies the port bits to be written.
    377            *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
    378            * @retval None
    379            */

   \                                 In section .text, align 2, keep-with-next
    380          void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
    381          {
   \                     GPIO_SetBits: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    382            /* Check the parameters */
    383            assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
   \   00000006   0x....             LDR.N    R0,??DataTable11  ;; 0x40020000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD01D             BEQ.N    ??GPIO_SetBits_0
   \   0000000C   0x....             LDR.N    R0,??DataTable11_1  ;; 0x40020400
   \   0000000E   0x4284             CMP      R4,R0
   \   00000010   0xD01A             BEQ.N    ??GPIO_SetBits_0
   \   00000012   0x....             LDR.N    R0,??DataTable11_2  ;; 0x40020800
   \   00000014   0x4284             CMP      R4,R0
   \   00000016   0xD017             BEQ.N    ??GPIO_SetBits_0
   \   00000018   0x....             LDR.N    R0,??DataTable11_3  ;; 0x40020c00
   \   0000001A   0x4284             CMP      R4,R0
   \   0000001C   0xD014             BEQ.N    ??GPIO_SetBits_0
   \   0000001E   0x....             LDR.N    R0,??DataTable11_4  ;; 0x40021000
   \   00000020   0x4284             CMP      R4,R0
   \   00000022   0xD011             BEQ.N    ??GPIO_SetBits_0
   \   00000024   0x....             LDR.N    R0,??DataTable11_5  ;; 0x40021400
   \   00000026   0x4284             CMP      R4,R0
   \   00000028   0xD00E             BEQ.N    ??GPIO_SetBits_0
   \   0000002A   0x....             LDR.N    R0,??DataTable11_6  ;; 0x40021800
   \   0000002C   0x4284             CMP      R4,R0
   \   0000002E   0xD00B             BEQ.N    ??GPIO_SetBits_0
   \   00000030   0x....             LDR.N    R0,??DataTable11_7  ;; 0x40021c00
   \   00000032   0x4284             CMP      R4,R0
   \   00000034   0xD008             BEQ.N    ??GPIO_SetBits_0
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40022000
   \   0000003A   0x4284             CMP      R4,R0
   \   0000003C   0xD004             BEQ.N    ??GPIO_SetBits_0
   \   0000003E   0xF240 0x117F      MOVW     R1,#+383
   \   00000042   0x....             LDR.N    R0,??DataTable11_8
   \   00000044   0x.... 0x....      BL       assert_failed
    384            assert_param(IS_GPIO_PIN(GPIO_Pin));
   \                     ??GPIO_SetBits_0: (+1)
   \   00000048   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000004A   0x2D00             CMP      R5,#+0
   \   0000004C   0xD104             BNE.N    ??GPIO_SetBits_1
   \   0000004E   0xF44F 0x71C0      MOV      R1,#+384
   \   00000052   0x....             LDR.N    R0,??DataTable11_8
   \   00000054   0x.... 0x....      BL       assert_failed
    385          
    386            GPIOx->BSRRL = GPIO_Pin;
   \                     ??GPIO_SetBits_1: (+1)
   \   00000058   0x8325             STRH     R5,[R4, #+24]
    387          }
   \   0000005A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    388          
    389          /**
    390            * @brief  Clears the selected data port bits.
    391            * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
    392            *         accesses. In this way, there is no risk of an IRQ occurring between
    393            *         the read and the modify access.
    394            * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
    395            * @param  GPIO_Pin: specifies the port bits to be written.
    396            *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
    397            * @retval None
    398            */

   \                                 In section .text, align 2, keep-with-next
    399          void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
    400          {
   \                     GPIO_ResetBits: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    401            /* Check the parameters */
    402            assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
   \   00000006   0x....             LDR.N    R0,??DataTable11  ;; 0x40020000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD01D             BEQ.N    ??GPIO_ResetBits_0
   \   0000000C   0x....             LDR.N    R0,??DataTable11_1  ;; 0x40020400
   \   0000000E   0x4284             CMP      R4,R0
   \   00000010   0xD01A             BEQ.N    ??GPIO_ResetBits_0
   \   00000012   0x....             LDR.N    R0,??DataTable11_2  ;; 0x40020800
   \   00000014   0x4284             CMP      R4,R0
   \   00000016   0xD017             BEQ.N    ??GPIO_ResetBits_0
   \   00000018   0x....             LDR.N    R0,??DataTable11_3  ;; 0x40020c00
   \   0000001A   0x4284             CMP      R4,R0
   \   0000001C   0xD014             BEQ.N    ??GPIO_ResetBits_0
   \   0000001E   0x....             LDR.N    R0,??DataTable11_4  ;; 0x40021000
   \   00000020   0x4284             CMP      R4,R0
   \   00000022   0xD011             BEQ.N    ??GPIO_ResetBits_0
   \   00000024   0x....             LDR.N    R0,??DataTable11_5  ;; 0x40021400
   \   00000026   0x4284             CMP      R4,R0
   \   00000028   0xD00E             BEQ.N    ??GPIO_ResetBits_0
   \   0000002A   0x....             LDR.N    R0,??DataTable11_6  ;; 0x40021800
   \   0000002C   0x4284             CMP      R4,R0
   \   0000002E   0xD00B             BEQ.N    ??GPIO_ResetBits_0
   \   00000030   0x....             LDR.N    R0,??DataTable11_7  ;; 0x40021c00
   \   00000032   0x4284             CMP      R4,R0
   \   00000034   0xD008             BEQ.N    ??GPIO_ResetBits_0
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40022000
   \   0000003A   0x4284             CMP      R4,R0
   \   0000003C   0xD004             BEQ.N    ??GPIO_ResetBits_0
   \   0000003E   0xF44F 0x71C9      MOV      R1,#+402
   \   00000042   0x....             LDR.N    R0,??DataTable11_8
   \   00000044   0x.... 0x....      BL       assert_failed
    403            assert_param(IS_GPIO_PIN(GPIO_Pin));
   \                     ??GPIO_ResetBits_0: (+1)
   \   00000048   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000004A   0x2D00             CMP      R5,#+0
   \   0000004C   0xD104             BNE.N    ??GPIO_ResetBits_1
   \   0000004E   0xF240 0x1193      MOVW     R1,#+403
   \   00000052   0x....             LDR.N    R0,??DataTable11_8
   \   00000054   0x.... 0x....      BL       assert_failed
    404          
    405            GPIOx->BSRRH = GPIO_Pin;
   \                     ??GPIO_ResetBits_1: (+1)
   \   00000058   0x8365             STRH     R5,[R4, #+26]
    406          }
   \   0000005A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    407          
    408          /**
    409            * @brief  Sets or clears the selected data port bit.
    410            * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
    411            * @param  GPIO_Pin: specifies the port bit to be written.
    412            *          This parameter can be one of GPIO_Pin_x where x can be (0..15).
    413            * @param  BitVal: specifies the value to be written to the selected bit.
    414            *          This parameter can be one of the BitAction enum values:
    415            *            @arg Bit_RESET: to clear the port pin
    416            *            @arg Bit_SET: to set the port pin
    417            * @retval None
    418            */

   \                                 In section .text, align 2, keep-with-next
    419          void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
    420          {
   \                     GPIO_WriteBit: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    421            /* Check the parameters */
    422            assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
   \   00000008   0x....             LDR.N    R0,??DataTable11  ;; 0x40020000
   \   0000000A   0x4284             CMP      R4,R0
   \   0000000C   0xD01D             BEQ.N    ??GPIO_WriteBit_0
   \   0000000E   0x....             LDR.N    R0,??DataTable11_1  ;; 0x40020400
   \   00000010   0x4284             CMP      R4,R0
   \   00000012   0xD01A             BEQ.N    ??GPIO_WriteBit_0
   \   00000014   0x....             LDR.N    R0,??DataTable11_2  ;; 0x40020800
   \   00000016   0x4284             CMP      R4,R0
   \   00000018   0xD017             BEQ.N    ??GPIO_WriteBit_0
   \   0000001A   0x....             LDR.N    R0,??DataTable11_3  ;; 0x40020c00
   \   0000001C   0x4284             CMP      R4,R0
   \   0000001E   0xD014             BEQ.N    ??GPIO_WriteBit_0
   \   00000020   0x....             LDR.N    R0,??DataTable11_4  ;; 0x40021000
   \   00000022   0x4284             CMP      R4,R0
   \   00000024   0xD011             BEQ.N    ??GPIO_WriteBit_0
   \   00000026   0x....             LDR.N    R0,??DataTable11_5  ;; 0x40021400
   \   00000028   0x4284             CMP      R4,R0
   \   0000002A   0xD00E             BEQ.N    ??GPIO_WriteBit_0
   \   0000002C   0x....             LDR.N    R0,??DataTable11_6  ;; 0x40021800
   \   0000002E   0x4284             CMP      R4,R0
   \   00000030   0xD00B             BEQ.N    ??GPIO_WriteBit_0
   \   00000032   0x....             LDR.N    R0,??DataTable11_7  ;; 0x40021c00
   \   00000034   0x4284             CMP      R4,R0
   \   00000036   0xD008             BEQ.N    ??GPIO_WriteBit_0
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40022000
   \   0000003C   0x4284             CMP      R4,R0
   \   0000003E   0xD004             BEQ.N    ??GPIO_WriteBit_0
   \   00000040   0xF44F 0x71D3      MOV      R1,#+422
   \   00000044   0x....             LDR.N    R0,??DataTable11_8
   \   00000046   0x.... 0x....      BL       assert_failed
    423            assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
   \                     ??GPIO_WriteBit_0: (+1)
   \   0000004A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000004C   0x2D01             CMP      R5,#+1
   \   0000004E   0xD039             BEQ.N    ??GPIO_WriteBit_1
   \   00000050   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000052   0x2D02             CMP      R5,#+2
   \   00000054   0xD036             BEQ.N    ??GPIO_WriteBit_1
   \   00000056   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000058   0x2D04             CMP      R5,#+4
   \   0000005A   0xD033             BEQ.N    ??GPIO_WriteBit_1
   \   0000005C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000005E   0x2D08             CMP      R5,#+8
   \   00000060   0xD030             BEQ.N    ??GPIO_WriteBit_1
   \   00000062   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000064   0x2D10             CMP      R5,#+16
   \   00000066   0xD02D             BEQ.N    ??GPIO_WriteBit_1
   \   00000068   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000006A   0x2D20             CMP      R5,#+32
   \   0000006C   0xD02A             BEQ.N    ??GPIO_WriteBit_1
   \   0000006E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000070   0x2D40             CMP      R5,#+64
   \   00000072   0xD027             BEQ.N    ??GPIO_WriteBit_1
   \   00000074   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000076   0x2D80             CMP      R5,#+128
   \   00000078   0xD024             BEQ.N    ??GPIO_WriteBit_1
   \   0000007A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000007C   0xF5B5 0x7F80      CMP      R5,#+256
   \   00000080   0xD020             BEQ.N    ??GPIO_WriteBit_1
   \   00000082   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000084   0xF5B5 0x7F00      CMP      R5,#+512
   \   00000088   0xD01C             BEQ.N    ??GPIO_WriteBit_1
   \   0000008A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000008C   0xF5B5 0x6F80      CMP      R5,#+1024
   \   00000090   0xD018             BEQ.N    ??GPIO_WriteBit_1
   \   00000092   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000094   0xF5B5 0x6F00      CMP      R5,#+2048
   \   00000098   0xD014             BEQ.N    ??GPIO_WriteBit_1
   \   0000009A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000009C   0xF5B5 0x5F80      CMP      R5,#+4096
   \   000000A0   0xD010             BEQ.N    ??GPIO_WriteBit_1
   \   000000A2   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000A4   0xF5B5 0x5F00      CMP      R5,#+8192
   \   000000A8   0xD00C             BEQ.N    ??GPIO_WriteBit_1
   \   000000AA   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000AC   0xF5B5 0x4F80      CMP      R5,#+16384
   \   000000B0   0xD008             BEQ.N    ??GPIO_WriteBit_1
   \   000000B2   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000B4   0xF5B5 0x4F00      CMP      R5,#+32768
   \   000000B8   0xD004             BEQ.N    ??GPIO_WriteBit_1
   \   000000BA   0xF240 0x11A7      MOVW     R1,#+423
   \   000000BE   0x....             LDR.N    R0,??DataTable11_8
   \   000000C0   0x.... 0x....      BL       assert_failed
    424            assert_param(IS_GPIO_BIT_ACTION(BitVal));
   \                     ??GPIO_WriteBit_1: (+1)
   \   000000C4   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000C6   0x2E00             CMP      R6,#+0
   \   000000C8   0xD007             BEQ.N    ??GPIO_WriteBit_2
   \   000000CA   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000CC   0x2E01             CMP      R6,#+1
   \   000000CE   0xD004             BEQ.N    ??GPIO_WriteBit_2
   \   000000D0   0xF44F 0x71D4      MOV      R1,#+424
   \   000000D4   0x....             LDR.N    R0,??DataTable11_8
   \   000000D6   0x.... 0x....      BL       assert_failed
    425          
    426            if (BitVal != Bit_RESET)
   \                     ??GPIO_WriteBit_2: (+1)
   \   000000DA   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000DC   0x2E00             CMP      R6,#+0
   \   000000DE   0xD001             BEQ.N    ??GPIO_WriteBit_3
    427            {
    428              GPIOx->BSRRL = GPIO_Pin;
   \   000000E0   0x8325             STRH     R5,[R4, #+24]
   \   000000E2   0xE000             B.N      ??GPIO_WriteBit_4
    429            }
    430            else
    431            {
    432              GPIOx->BSRRH = GPIO_Pin ;
   \                     ??GPIO_WriteBit_3: (+1)
   \   000000E4   0x8365             STRH     R5,[R4, #+26]
    433            }
    434          }
   \                     ??GPIO_WriteBit_4: (+1)
   \   000000E6   0xBD70             POP      {R4-R6,PC}       ;; return
    435          
    436          /**
    437            * @brief  Writes data to the specified GPIO data port.
    438            * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
    439            * @param  PortVal: specifies the value to be written to the port output data register.
    440            * @retval None
    441            */

   \                                 In section .text, align 2, keep-with-next
    442          void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
    443          {
   \                     GPIO_Write: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    444            /* Check the parameters */
    445            assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
   \   00000006   0x....             LDR.N    R0,??DataTable11  ;; 0x40020000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD01C             BEQ.N    ??GPIO_Write_0
   \   0000000C   0x....             LDR.N    R0,??DataTable11_1  ;; 0x40020400
   \   0000000E   0x4284             CMP      R4,R0
   \   00000010   0xD019             BEQ.N    ??GPIO_Write_0
   \   00000012   0x....             LDR.N    R0,??DataTable11_2  ;; 0x40020800
   \   00000014   0x4284             CMP      R4,R0
   \   00000016   0xD016             BEQ.N    ??GPIO_Write_0
   \   00000018   0x....             LDR.N    R0,??DataTable11_3  ;; 0x40020c00
   \   0000001A   0x4284             CMP      R4,R0
   \   0000001C   0xD013             BEQ.N    ??GPIO_Write_0
   \   0000001E   0x....             LDR.N    R0,??DataTable11_4  ;; 0x40021000
   \   00000020   0x4284             CMP      R4,R0
   \   00000022   0xD010             BEQ.N    ??GPIO_Write_0
   \   00000024   0x....             LDR.N    R0,??DataTable11_5  ;; 0x40021400
   \   00000026   0x4284             CMP      R4,R0
   \   00000028   0xD00D             BEQ.N    ??GPIO_Write_0
   \   0000002A   0x....             LDR.N    R0,??DataTable11_6  ;; 0x40021800
   \   0000002C   0x4284             CMP      R4,R0
   \   0000002E   0xD00A             BEQ.N    ??GPIO_Write_0
   \   00000030   0x....             LDR.N    R0,??DataTable11_7  ;; 0x40021c00
   \   00000032   0x4284             CMP      R4,R0
   \   00000034   0xD007             BEQ.N    ??GPIO_Write_0
   \   00000036   0x....             LDR.N    R0,??DataTable12  ;; 0x40022000
   \   00000038   0x4284             CMP      R4,R0
   \   0000003A   0xD004             BEQ.N    ??GPIO_Write_0
   \   0000003C   0xF240 0x11BD      MOVW     R1,#+445
   \   00000040   0x....             LDR.N    R0,??DataTable11_8
   \   00000042   0x.... 0x....      BL       assert_failed
    446          
    447            GPIOx->ODR = PortVal;
   \                     ??GPIO_Write_0: (+1)
   \   00000046   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000048   0x6165             STR      R5,[R4, #+20]
    448          }
   \   0000004A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    449          
    450          /**
    451            * @brief  Toggles the specified GPIO pins..
    452            * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
    453            * @param  GPIO_Pin: Specifies the pins to be toggled.
    454            * @retval None
    455            */

   \                                 In section .text, align 2, keep-with-next
    456          void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
    457          {
   \                     GPIO_ToggleBits: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    458            /* Check the parameters */
    459            assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
   \   00000006   0x....             LDR.N    R0,??DataTable11  ;; 0x40020000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD01C             BEQ.N    ??GPIO_ToggleBits_0
   \   0000000C   0x....             LDR.N    R0,??DataTable11_1  ;; 0x40020400
   \   0000000E   0x4284             CMP      R4,R0
   \   00000010   0xD019             BEQ.N    ??GPIO_ToggleBits_0
   \   00000012   0x....             LDR.N    R0,??DataTable11_2  ;; 0x40020800
   \   00000014   0x4284             CMP      R4,R0
   \   00000016   0xD016             BEQ.N    ??GPIO_ToggleBits_0
   \   00000018   0x....             LDR.N    R0,??DataTable11_3  ;; 0x40020c00
   \   0000001A   0x4284             CMP      R4,R0
   \   0000001C   0xD013             BEQ.N    ??GPIO_ToggleBits_0
   \   0000001E   0x....             LDR.N    R0,??DataTable11_4  ;; 0x40021000
   \   00000020   0x4284             CMP      R4,R0
   \   00000022   0xD010             BEQ.N    ??GPIO_ToggleBits_0
   \   00000024   0x....             LDR.N    R0,??DataTable11_5  ;; 0x40021400
   \   00000026   0x4284             CMP      R4,R0
   \   00000028   0xD00D             BEQ.N    ??GPIO_ToggleBits_0
   \   0000002A   0x....             LDR.N    R0,??DataTable11_6  ;; 0x40021800
   \   0000002C   0x4284             CMP      R4,R0
   \   0000002E   0xD00A             BEQ.N    ??GPIO_ToggleBits_0
   \   00000030   0x....             LDR.N    R0,??DataTable11_7  ;; 0x40021c00
   \   00000032   0x4284             CMP      R4,R0
   \   00000034   0xD007             BEQ.N    ??GPIO_ToggleBits_0
   \   00000036   0x....             LDR.N    R0,??DataTable12  ;; 0x40022000
   \   00000038   0x4284             CMP      R4,R0
   \   0000003A   0xD004             BEQ.N    ??GPIO_ToggleBits_0
   \   0000003C   0xF240 0x11CB      MOVW     R1,#+459
   \   00000040   0x....             LDR.N    R0,??DataTable11_8
   \   00000042   0x.... 0x....      BL       assert_failed
    460          
    461            GPIOx->ODR ^= GPIO_Pin;
   \                     ??GPIO_ToggleBits_0: (+1)
   \   00000046   0x6960             LDR      R0,[R4, #+20]
   \   00000048   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000004A   0x4068             EORS     R0,R5,R0
   \   0000004C   0x6160             STR      R0,[R4, #+20]
    462          }
   \   0000004E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    463          
    464          /**
    465            * @}
    466            */
    467          
    468          /** @defgroup GPIO_Group3 GPIO Alternate functions configuration function
    469           *  @brief   GPIO Alternate functions configuration function
    470           *
    471          @verbatim   
    472           ===============================================================================
    473                         GPIO Alternate functions configuration function
    474           ===============================================================================  
    475          
    476          @endverbatim
    477            * @{
    478            */
    479          
    480          /**
    481            * @brief  Changes the mapping of the specified pin.
    482            * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
    483            * @param  GPIO_PinSource: specifies the pin for the Alternate function.
    484            *         This parameter can be GPIO_PinSourcex where x can be (0..15).
    485            * @param  GPIO_AFSelection: selects the pin to used as Alternate function.
    486            *          This parameter can be one of the following values:
    487            *            @arg GPIO_AF_RTC_50Hz: Connect RTC_50Hz pin to AF0 (default after reset) 
    488            *            @arg GPIO_AF_MCO: Connect MCO pin (MCO1 and MCO2) to AF0 (default after reset) 
    489            *            @arg GPIO_AF_TAMPER: Connect TAMPER pins (TAMPER_1 and TAMPER_2) to AF0 (default after reset) 
    490            *            @arg GPIO_AF_SWJ: Connect SWJ pins (SWD and JTAG)to AF0 (default after reset) 
    491            *            @arg GPIO_AF_TRACE: Connect TRACE pins to AF0 (default after reset)
    492            *            @arg GPIO_AF_TIM1: Connect TIM1 pins to AF1
    493            *            @arg GPIO_AF_TIM2: Connect TIM2 pins to AF1
    494            *            @arg GPIO_AF_TIM3: Connect TIM3 pins to AF2
    495            *            @arg GPIO_AF_TIM4: Connect TIM4 pins to AF2
    496            *            @arg GPIO_AF_TIM5: Connect TIM5 pins to AF2
    497            *            @arg GPIO_AF_TIM8: Connect TIM8 pins to AF3
    498            *            @arg GPIO_AF_TIM9: Connect TIM9 pins to AF3
    499            *            @arg GPIO_AF_TIM10: Connect TIM10 pins to AF3
    500            *            @arg GPIO_AF_TIM11: Connect TIM11 pins to AF3
    501            *            @arg GPIO_AF_I2C1: Connect I2C1 pins to AF4
    502            *            @arg GPIO_AF_I2C2: Connect I2C2 pins to AF4
    503            *            @arg GPIO_AF_I2C3: Connect I2C3 pins to AF4
    504            *            @arg GPIO_AF_SPI1: Connect SPI1 pins to AF5
    505            *            @arg GPIO_AF_SPI2: Connect SPI2/I2S2 pins to AF5
    506            *            @arg GPIO_AF_SPI3: Connect SPI3/I2S3 pins to AF6
    507            *            @arg GPIO_AF_I2S3ext: Connect I2S3ext pins to AF7
    508            *            @arg GPIO_AF_USART1: Connect USART1 pins to AF7
    509            *            @arg GPIO_AF_USART2: Connect USART2 pins to AF7
    510            *            @arg GPIO_AF_USART3: Connect USART3 pins to AF7
    511            *            @arg GPIO_AF_UART4: Connect UART4 pins to AF8
    512            *            @arg GPIO_AF_UART5: Connect UART5 pins to AF8
    513            *            @arg GPIO_AF_USART6: Connect USART6 pins to AF8
    514            *            @arg GPIO_AF_CAN1: Connect CAN1 pins to AF9
    515            *            @arg GPIO_AF_CAN2: Connect CAN2 pins to AF9
    516            *            @arg GPIO_AF_TIM12: Connect TIM12 pins to AF9
    517            *            @arg GPIO_AF_TIM13: Connect TIM13 pins to AF9
    518            *            @arg GPIO_AF_TIM14: Connect TIM14 pins to AF9
    519            *            @arg GPIO_AF_OTG_FS: Connect OTG_FS pins to AF10
    520            *            @arg GPIO_AF_OTG_HS: Connect OTG_HS pins to AF10
    521            *            @arg GPIO_AF_ETH: Connect ETHERNET pins to AF11
    522            *            @arg GPIO_AF_FSMC: Connect FSMC pins to AF12
    523            *            @arg GPIO_AF_OTG_HS_FS: Connect OTG HS (configured in FS) pins to AF12
    524            *            @arg GPIO_AF_SDIO: Connect SDIO pins to AF12
    525            *            @arg GPIO_AF_DCMI: Connect DCMI pins to AF13
    526            *            @arg GPIO_AF_EVENTOUT: Connect EVENTOUT pins to AF15
    527            * @retval None
    528            */

   \                                 In section .text, align 2, keep-with-next
    529          void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
    530          {
   \                     GPIO_PinAFConfig: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    531            uint32_t temp = 0x00;
   \   0000000A   0x2700             MOVS     R7,#+0
    532            uint32_t temp_2 = 0x00;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    533            
    534            /* Check the parameters */
    535            assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
   \   00000010   0x....             LDR.N    R0,??DataTable12_1  ;; 0x40020000
   \   00000012   0x4284             CMP      R4,R0
   \   00000014   0xD01C             BEQ.N    ??GPIO_PinAFConfig_0
   \   00000016   0x....             LDR.N    R0,??DataTable12_2  ;; 0x40020400
   \   00000018   0x4284             CMP      R4,R0
   \   0000001A   0xD019             BEQ.N    ??GPIO_PinAFConfig_0
   \   0000001C   0x....             LDR.N    R0,??DataTable12_3  ;; 0x40020800
   \   0000001E   0x4284             CMP      R4,R0
   \   00000020   0xD016             BEQ.N    ??GPIO_PinAFConfig_0
   \   00000022   0x....             LDR.N    R0,??DataTable12_4  ;; 0x40020c00
   \   00000024   0x4284             CMP      R4,R0
   \   00000026   0xD013             BEQ.N    ??GPIO_PinAFConfig_0
   \   00000028   0x....             LDR.N    R0,??DataTable12_5  ;; 0x40021000
   \   0000002A   0x4284             CMP      R4,R0
   \   0000002C   0xD010             BEQ.N    ??GPIO_PinAFConfig_0
   \   0000002E   0x....             LDR.N    R0,??DataTable12_6  ;; 0x40021400
   \   00000030   0x4284             CMP      R4,R0
   \   00000032   0xD00D             BEQ.N    ??GPIO_PinAFConfig_0
   \   00000034   0x....             LDR.N    R0,??DataTable12_7  ;; 0x40021800
   \   00000036   0x4284             CMP      R4,R0
   \   00000038   0xD00A             BEQ.N    ??GPIO_PinAFConfig_0
   \   0000003A   0x....             LDR.N    R0,??DataTable12_8  ;; 0x40021c00
   \   0000003C   0x4284             CMP      R4,R0
   \   0000003E   0xD007             BEQ.N    ??GPIO_PinAFConfig_0
   \   00000040   0x....             LDR.N    R0,??DataTable12  ;; 0x40022000
   \   00000042   0x4284             CMP      R4,R0
   \   00000044   0xD004             BEQ.N    ??GPIO_PinAFConfig_0
   \   00000046   0xF240 0x2117      MOVW     R1,#+535
   \   0000004A   0x....             LDR.N    R0,??DataTable12_9
   \   0000004C   0x.... 0x....      BL       assert_failed
    536            assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
   \                     ??GPIO_PinAFConfig_0: (+1)
   \   00000050   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000052   0x2D00             CMP      R5,#+0
   \   00000054   0xD031             BEQ.N    ??GPIO_PinAFConfig_1
   \   00000056   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000058   0x2D01             CMP      R5,#+1
   \   0000005A   0xD02E             BEQ.N    ??GPIO_PinAFConfig_1
   \   0000005C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000005E   0x2D02             CMP      R5,#+2
   \   00000060   0xD02B             BEQ.N    ??GPIO_PinAFConfig_1
   \   00000062   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000064   0x2D03             CMP      R5,#+3
   \   00000066   0xD028             BEQ.N    ??GPIO_PinAFConfig_1
   \   00000068   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000006A   0x2D04             CMP      R5,#+4
   \   0000006C   0xD025             BEQ.N    ??GPIO_PinAFConfig_1
   \   0000006E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000070   0x2D05             CMP      R5,#+5
   \   00000072   0xD022             BEQ.N    ??GPIO_PinAFConfig_1
   \   00000074   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000076   0x2D06             CMP      R5,#+6
   \   00000078   0xD01F             BEQ.N    ??GPIO_PinAFConfig_1
   \   0000007A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000007C   0x2D07             CMP      R5,#+7
   \   0000007E   0xD01C             BEQ.N    ??GPIO_PinAFConfig_1
   \   00000080   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000082   0x2D08             CMP      R5,#+8
   \   00000084   0xD019             BEQ.N    ??GPIO_PinAFConfig_1
   \   00000086   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000088   0x2D09             CMP      R5,#+9
   \   0000008A   0xD016             BEQ.N    ??GPIO_PinAFConfig_1
   \   0000008C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000008E   0x2D0A             CMP      R5,#+10
   \   00000090   0xD013             BEQ.N    ??GPIO_PinAFConfig_1
   \   00000092   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000094   0x2D0B             CMP      R5,#+11
   \   00000096   0xD010             BEQ.N    ??GPIO_PinAFConfig_1
   \   00000098   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000009A   0x2D0C             CMP      R5,#+12
   \   0000009C   0xD00D             BEQ.N    ??GPIO_PinAFConfig_1
   \   0000009E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000A0   0x2D0D             CMP      R5,#+13
   \   000000A2   0xD00A             BEQ.N    ??GPIO_PinAFConfig_1
   \   000000A4   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000A6   0x2D0E             CMP      R5,#+14
   \   000000A8   0xD007             BEQ.N    ??GPIO_PinAFConfig_1
   \   000000AA   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000AC   0x2D0F             CMP      R5,#+15
   \   000000AE   0xD004             BEQ.N    ??GPIO_PinAFConfig_1
   \   000000B0   0xF44F 0x7106      MOV      R1,#+536
   \   000000B4   0x....             LDR.N    R0,??DataTable12_9
   \   000000B6   0x.... 0x....      BL       assert_failed
    537            assert_param(IS_GPIO_AF(GPIO_AF));
   \                     ??GPIO_PinAFConfig_1: (+1)
   \   000000BA   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000BC   0x2E00             CMP      R6,#+0
   \   000000BE   0xD06D             BEQ.N    ??GPIO_PinAFConfig_2
   \   000000C0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000C2   0x2E09             CMP      R6,#+9
   \   000000C4   0xD06A             BEQ.N    ??GPIO_PinAFConfig_2
   \   000000C6   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000C8   0x2E00             CMP      R6,#+0
   \   000000CA   0xD067             BEQ.N    ??GPIO_PinAFConfig_2
   \   000000CC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000CE   0x2E00             CMP      R6,#+0
   \   000000D0   0xD064             BEQ.N    ??GPIO_PinAFConfig_2
   \   000000D2   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000D4   0x2E00             CMP      R6,#+0
   \   000000D6   0xD061             BEQ.N    ??GPIO_PinAFConfig_2
   \   000000D8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000DA   0x2E00             CMP      R6,#+0
   \   000000DC   0xD05E             BEQ.N    ??GPIO_PinAFConfig_2
   \   000000DE   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000E0   0x2E01             CMP      R6,#+1
   \   000000E2   0xD05B             BEQ.N    ??GPIO_PinAFConfig_2
   \   000000E4   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000E6   0x2E01             CMP      R6,#+1
   \   000000E8   0xD058             BEQ.N    ??GPIO_PinAFConfig_2
   \   000000EA   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000EC   0x2E02             CMP      R6,#+2
   \   000000EE   0xD055             BEQ.N    ??GPIO_PinAFConfig_2
   \   000000F0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000F2   0x2E02             CMP      R6,#+2
   \   000000F4   0xD052             BEQ.N    ??GPIO_PinAFConfig_2
   \   000000F6   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000F8   0x2E02             CMP      R6,#+2
   \   000000FA   0xD04F             BEQ.N    ??GPIO_PinAFConfig_2
   \   000000FC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000FE   0x2E03             CMP      R6,#+3
   \   00000100   0xD04C             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000102   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000104   0x2E04             CMP      R6,#+4
   \   00000106   0xD049             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000108   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000010A   0x2E04             CMP      R6,#+4
   \   0000010C   0xD046             BEQ.N    ??GPIO_PinAFConfig_2
   \   0000010E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000110   0x2E04             CMP      R6,#+4
   \   00000112   0xD043             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000114   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000116   0x2E05             CMP      R6,#+5
   \   00000118   0xD040             BEQ.N    ??GPIO_PinAFConfig_2
   \   0000011A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000011C   0x2E05             CMP      R6,#+5
   \   0000011E   0xD03D             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000120   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000122   0x2E09             CMP      R6,#+9
   \   00000124   0xD03A             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000126   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000128   0x2E06             CMP      R6,#+6
   \   0000012A   0xD037             BEQ.N    ??GPIO_PinAFConfig_2
   \   0000012C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000012E   0x2E09             CMP      R6,#+9
   \   00000130   0xD034             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000132   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000134   0x2E07             CMP      R6,#+7
   \   00000136   0xD031             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000138   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000013A   0x2E07             CMP      R6,#+7
   \   0000013C   0xD02E             BEQ.N    ??GPIO_PinAFConfig_2
   \   0000013E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000140   0x2E07             CMP      R6,#+7
   \   00000142   0xD02B             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000144   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000146   0x2E08             CMP      R6,#+8
   \   00000148   0xD028             BEQ.N    ??GPIO_PinAFConfig_2
   \   0000014A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000014C   0x2E08             CMP      R6,#+8
   \   0000014E   0xD025             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000150   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000152   0x2E08             CMP      R6,#+8
   \   00000154   0xD022             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000156   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000158   0x2E09             CMP      R6,#+9
   \   0000015A   0xD01F             BEQ.N    ??GPIO_PinAFConfig_2
   \   0000015C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000015E   0x2E09             CMP      R6,#+9
   \   00000160   0xD01C             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000162   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000164   0x2E0A             CMP      R6,#+10
   \   00000166   0xD019             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000168   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000016A   0x2E0A             CMP      R6,#+10
   \   0000016C   0xD016             BEQ.N    ??GPIO_PinAFConfig_2
   \   0000016E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000170   0x2E0B             CMP      R6,#+11
   \   00000172   0xD013             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000174   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000176   0x2E0C             CMP      R6,#+12
   \   00000178   0xD010             BEQ.N    ??GPIO_PinAFConfig_2
   \   0000017A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000017C   0x2E0C             CMP      R6,#+12
   \   0000017E   0xD00D             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000180   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000182   0x2E0C             CMP      R6,#+12
   \   00000184   0xD00A             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000186   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000188   0x2E0D             CMP      R6,#+13
   \   0000018A   0xD007             BEQ.N    ??GPIO_PinAFConfig_2
   \   0000018C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000018E   0x2E0F             CMP      R6,#+15
   \   00000190   0xD004             BEQ.N    ??GPIO_PinAFConfig_2
   \   00000192   0xF240 0x2119      MOVW     R1,#+537
   \   00000196   0x....             LDR.N    R0,??DataTable12_9
   \   00000198   0x.... 0x....      BL       assert_failed
    538            
    539            temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
   \                     ??GPIO_PinAFConfig_2: (+1)
   \   0000019C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000019E   0xF015 0x0007      ANDS     R0,R5,#0x7
   \   000001A2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001A4   0x0080             LSLS     R0,R0,#+2
   \   000001A6   0xFA16 0xF000      LSLS     R0,R6,R0
   \   000001AA   0x0007             MOVS     R7,R0
    540            GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
   \   000001AC   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001AE   0x10E8             ASRS     R0,R5,#+3
   \   000001B0   0xEB14 0x0080      ADDS     R0,R4,R0, LSL #+2
   \   000001B4   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001B6   0x10E9             ASRS     R1,R5,#+3
   \   000001B8   0xEB14 0x0181      ADDS     R1,R4,R1, LSL #+2
   \   000001BC   0x6A09             LDR      R1,[R1, #+32]
   \   000001BE   0x220F             MOVS     R2,#+15
   \   000001C0   0xF015 0x0307      ANDS     R3,R5,#0x7
   \   000001C4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000001C6   0x009B             LSLS     R3,R3,#+2
   \   000001C8   0x409A             LSLS     R2,R2,R3
   \   000001CA   0x4391             BICS     R1,R1,R2
   \   000001CC   0x6201             STR      R1,[R0, #+32]
    541            temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
   \   000001CE   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001D0   0x10E8             ASRS     R0,R5,#+3
   \   000001D2   0xEB14 0x0080      ADDS     R0,R4,R0, LSL #+2
   \   000001D6   0x6A00             LDR      R0,[R0, #+32]
   \   000001D8   0x4338             ORRS     R0,R7,R0
   \   000001DA   0x4680             MOV      R8,R0
    542            GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
   \   000001DC   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001DE   0x10E8             ASRS     R0,R5,#+3
   \   000001E0   0xEB14 0x0080      ADDS     R0,R4,R0, LSL #+2
   \   000001E4   0xF8C0 0x8020      STR      R8,[R0, #+32]
    543          }
   \   000001E8   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x40020400         DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x40020800         DC32     0x40020800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x40020C00         DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x40021000         DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x40021400         DC32     0x40021400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x40021800         DC32     0x40021800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x40021C00         DC32     0x40021c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x40022000         DC32     0x40022000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x40020400         DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x40020800         DC32     0x40020800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x40020C00         DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x40021000         DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x40021400         DC32     0x40021400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x40021800         DC32     0x40021800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x40021C00         DC32     0x40021c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x44 0x3A          DC8 44H, 3AH, 5CH, 49H, 41H, 52H, 20H, 57H
   \              0x5C 0x49    
   \              0x41 0x52    
   \              0x20 0x57    
   \   00000008   0x6F 0x72          DC8 6FH, 72H, 6BH, 73H, 70H, 61H, 63H, 65H
   \              0x6B 0x73    
   \              0x70 0x61    
   \              0x63 0x65    
   \   00000010   0x5C 0x53          DC8 5CH, 53H, 54H, 4DH, 33H, 32H, 46H, 34H
   \              0x54 0x4D    
   \              0x33 0x32    
   \              0x46 0x34    
   \   00000018   0x30 0x37          DC8 30H, 37H, 5CH, 53H, 54H, 4DH, 33H, 32H
   \              0x5C 0x53    
   \              0x54 0x4D    
   \              0x33 0x32    
   \   00000020   0x46 0x34          DC8 46H, 34H, 2DH, 44H, 69H, 73H, 63H, 6FH
   \              0x2D 0x44    
   \              0x69 0x73    
   \              0x63 0x6F    
   \   00000028   0x76 0x65          DC8 76H, 65H, 72H, 79H, 5FH, 46H, 57H, 5FH
   \              0x72 0x79    
   \              0x5F 0x46    
   \              0x57 0x5F    
   \   00000030   0x56 0x31          DC8 56H, 31H, 2EH, 31H, 2EH, 30H, 5CH, 4CH
   \              0x2E 0x31    
   \              0x2E 0x30    
   \              0x5C 0x4C    
   \   00000038   0x69 0x62          DC8 69H, 62H, 72H, 61H, 72H, 69H, 65H, 73H
   \              0x72 0x61    
   \              0x72 0x69    
   \              0x65 0x73    
   \   00000040   0x5C 0x53          DC8 5CH, 53H, 54H, 4DH, 33H, 32H, 46H, 34H
   \              0x54 0x4D    
   \              0x33 0x32    
   \              0x46 0x34    
   \   00000048   0x78 0x78          DC8 78H, 78H, 5FH, 53H, 74H, 64H, 50H, 65H
   \              0x5F 0x53    
   \              0x74 0x64    
   \              0x50 0x65    
   \   00000050   0x72 0x69          DC8 72H, 69H, 70H, 68H, 5FH, 44H, 72H, 69H
   \              0x70 0x68    
   \              0x5F 0x44    
   \              0x72 0x69    
   \   00000058   0x76 0x65          DC8 76H, 65H, 72H, 5CH, 73H, 72H, 63H, 5CH
   \              0x72 0x5C    
   \              0x73 0x72    
   \              0x63 0x5C    
   \   00000060   0x73 0x74          DC8 73H, 74H, 6DH, 33H, 32H, 66H, 34H, 78H
   \              0x6D 0x33    
   \              0x32 0x66    
   \              0x34 0x78    
   \   00000068   0x78 0x5F          DC8 78H, 5FH, 67H, 70H, 69H, 6FH, 2EH, 63H
   \              0x67 0x70    
   \              0x69 0x6F    
   \              0x2E 0x63    
   \   00000070   0x00               DC8 0
   \   00000071   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    544          
    545          /**
    546            * @}
    547            */ 
    548          
    549          /**
    550            * @}
    551            */
    552          
    553          /**
    554            * @}
    555            */ 
    556          
    557          /**
    558            * @}
    559            */ 
    560          
    561          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   GPIO_DeInit
         8   -> RCC_AHB1PeriphResetCmd
         8   -> assert_failed
      24   GPIO_Init
        24   -> assert_failed
      24   GPIO_PinAFConfig
        24   -> assert_failed
      16   GPIO_PinLockConfig
        16   -> assert_failed
       8   GPIO_ReadInputData
         8   -> assert_failed
      16   GPIO_ReadInputDataBit
        16   -> assert_failed
       8   GPIO_ReadOutputData
         8   -> assert_failed
      16   GPIO_ReadOutputDataBit
        16   -> assert_failed
      16   GPIO_ResetBits
        16   -> assert_failed
      16   GPIO_SetBits
        16   -> assert_failed
       0   GPIO_StructInit
      16   GPIO_ToggleBits
        16   -> assert_failed
      16   GPIO_Write
        16   -> assert_failed
      16   GPIO_WriteBit
        16   -> assert_failed


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_2
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
     116  ?_0
     324  GPIO_DeInit
     394  GPIO_Init
     492  GPIO_PinAFConfig
     144  GPIO_PinLockConfig
      94  GPIO_ReadInputData
     240  GPIO_ReadInputDataBit
      76  GPIO_ReadOutputData
     238  GPIO_ReadOutputDataBit
      92  GPIO_ResetBits
      92  GPIO_SetBits
      24  GPIO_StructInit
      80  GPIO_ToggleBits
      76  GPIO_Write
     232  GPIO_WriteBit

 
   116 bytes in section .rodata
 2 674 bytes in section .text
 
 2 674 bytes of CODE  memory
   116 bytes of CONST memory

Errors: none
Warnings: none
